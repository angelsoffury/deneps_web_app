{"version":3,"sources":["index.js"],"names":["isBrowser","logRequest","request","header","success","failure","LoggerProxy","logger","info","then","arg","catch","error","Meeting","attrs","options","MEETINGS","mediaDirection","audioVideo","VIDEO_RESOLUTIONS","mediaProperties","localQualityLevel","sharePreferences","sendAudio","sendVideo","sendShare","warn","video","deviceId","preferredVideoDevice","lastVideoDeviceId","getVideoDeviceId","setVideoDeviceId","Media","getSupportedDevice","reject","MediaError","devicePermissions","getUserMedia","isSharing","shareStatus","SHARE_STATUS","LOCAL_SHARE_ACTIVE","config","metricName","METRICS_OPERATIONAL_MEASURES","GET_USER_MEDIA_FAILURE","data","correlation_id","correlationId","locus_id","locusUrl","split","pop","reason","message","stack","metadata","type","name","Metrics","sendOperationalMetric","getDevices","id","uuid","v4","userId","orgId","resource","deviceUrl","roapSeq","ROAP_SEQ_PRE","meetingInfo","members","Members","locus","url","parent","webex","roap","Roap","reconnectionManager","ReconnectionManager","audio","meetingFiniteStateMachine","MeetingStateMachine","create","stats","internalStats","conversationUrl","sipUri","partner","owner","hostId","policy","meetingRequest","MeetingRequest","MediaProperties","inMeetingActions","InMeetingActions","NO_SHARE","get","shareTransceiver","peerConnection","shareDirection","direction","trackReadyState","sender","track","readyState","activeShare","LIVE","offersToSendData","SENDRECV","configurable","callEvents","floorGrantPending","mediaQualityMetrics","statsAnalyzer","mqaProcessor","networkStatus","locusInfo","LocusInfo","updateMeetingObject","bind","recording","deferJoin","undefined","hasWebsocketConnected","internal","mercury","connected","setUpLocusInfoListeners","init","setUpLocusInfoSelfListener","setUpLocusInfoMeetingListener","setUpLocusFullStateListener","setUpLocusUrlListener","setUpLocusHostListener","setUpLocusSelfListener","setUpLocusParticipantsListener","setupLocusControlsListener","setUpLocusMediaSharesListener","setUpLocusInfoMeetingInfoListener","setUpLocusInfoAssignHostListener","setUpLocusInfoMediaInactiveListener","on","EVENTS","DISCONNECT_DUE_TO_INACTIVITY","res","locusId","Trigger","trigger","file","function","REQUEST_UPLOAD_LOGS","reconnect","LOCUS_INFO_CAN_ASSIGN_HOST","payload","EVENT_TRIGGERS","MEETING_ACTIONS_UPDATE","canAssignHost","canLock","getCanLock","canUnlock","getCanUnlock","setCanAssignHost","LOCUSINFO","FULL_STATE_MEETING_STATE_CHANGE","MEETING_STATE_CHANGE","FULL_STATE_TYPE_UPDATE","locusFullStateTypeUpdate","event","trackingId","identifiers","locusStartTime","fullState","lastActive","MQA_STATS","CA_TYPE","initMediaPayload","initPayload","getAnalyzerMetricsPrePayload","metrics","submitCallDiagnosticEvents","clientType","subClientType","NETWORK_STATUS","DISCONNECTED","MEETINGS_NETWORK_DISCONNECTED","CONNECTED","MEETINGS_NETWORK_CONNECTED","LOCUS_INFO_UPDATE_SELF","locusSelfUpdate","newSelf","state","MEETING_STATE","STATES","JOINED","share","LOCUS_INFO_UPDATE_HOST","locusHostUpdate","LOCUS_INFO_UPDATE_PARTICIPANTS","locusParticipantsUpdate","CONTROLS_RECORDING_UPDATED","modifiedBy","lastModified","RECORDING_STATE","RECORDING","MEETING_STARTED_RECORDING","IDLE","MEETING_STOPPED_RECORDING","PAUSED","MEETING_PAUSED_RECORDING","RESUMED","MEETING_RESUMED_RECORDING","LOCUS_INFO_UPDATE_MEDIA_SHARES","current","contentId","disposition","previous","newShareStatus","selfId","FLOOR_ACTION","GRANTED","REMOTE_SHARE_ACTIVE","RELEASED","oldShareStatus","MEETING_STOPPED_SHARING_REMOTE","MEETING_STOPPED_SHARING_LOCAL","SHARE_STOPPED_REASON","SELF_STOPPED","sendStartedSharingRemote","MEETING_STARTED_SHARING_REMOTE","memberId","updateShare","receiveShare","finally","MEETING_STARTED_SHARING_LOCAL","postEvent","eventType","LOCAL_SHARE_FLOOR_GRANTED","meeting","locusMediaSharesUpdate","LOCUS_INFO_UPDATE_URL","locusUrlUpdate","MEETING_LOCKED","MEETING_UNLOCKED","MEETING_INFO_UPDATED","newCanLock","newCanUnlock","self","moderator","MeetingUtil","canUserLock","canUserUnlock","getCanAssignHost","setCanLock","setCanUnlock","SELF_MUTED_BY_OTHERS","MEETING_SELF_MUTED_BY_OTHERS","SELF_UNADMITTED_GUEST","MEETING_SELF_LOBBY_WAITING","LOBBY_ENTERED","SELF_ADMITTED_GUEST","MEETING_SELF_GUEST_ADMITTED","LOBBY_EXITED","MEDIA_INACTIVITY","MEETING_MEDIA_INACTIVE","MEDIA_STATUS_CHANGE","status","updateMediaStatus","actual","expected","isMuted","receiveAudio","receiveVideo","REMOTE_RESPONSE","remote","remoteDeclined","leave","DESTROY_MEETING","wirelessShare","shareTrack","onended","stop","shouldLeave","cleanUp","meetingId","object","length","forEach","key","invitee","alertIfActive","addMember","memberIds","admitMembers","removeMember","mute","muteMember","transferHostToMember","mqaInterval","clearInterval","automaticMetrics","StatsMetrics","getStats","initialize","setStats","setInterval","processMQAData","mqaMetricsInterval","MQAProcessor","DATA_PLACEMENTS","sendRecvData","toLowerCase","endsWith","STATS","SENDER","getSender","RECEIVER","getReceiver","mqa","getMQA","interval","getSlice","process","override","createStats","log","StatsUtil","generateOptions","CONFIG","WebRTCStats","destroySenders","destroyReceivers","isSelf","body","errors","setSipUri","sipMeetingUri","setLocus","participants","getLocusPartner","_CALL_","person","sipUrl","seq","mtgLocus","mediaConnections","mediaId","host","initialSetup","pc","ontrack","MEDIA_ID","AUDIO_TRACK","VIDEO_TRACK","SHARE_TRACK","mediaTrack","trackMediaID","transceiver","mid","target","audioTransceiver","videoTransceiver","receiver","MUTE_AUDIO_FAILURE","EVENT_TYPES","REMOTE_AUDIO","setRemoteAudioTrack","REMOTE_VIDEO","setRemoteVideoTrack","REMOTE_SHARE","setRemoteShare","startAnalyzer","MEDIA_READY","stream","MediaUtil","createMediaStream","unsetRemoteMedia","unsetRemoteTracks","closeRemoteTracks","remoteAudioTrack","remoteVideoTrack","remoteShare","triggerMediaStoppedEvent","mediaType","MEDIA_STOPPED","stopTrack","stopTracks","isTrackStopped","ENDED","isWrongReadyState","all","localStream","getTrack","audioTrack","videoTrack","settings","getSettings","setMediaSettings","echoCancellation","noiseSuppression","mediaSettings","setLocalAudioTrack","setLocalVideoTrack","aspectRatio","frameRate","height","width","LOCAL","localShare","setLocalShareTrack","contentTracks","displaySurface","cursor","screen","handleShareTrackEnded","LOCAL_SHARE","audioStopped","videoStopped","unsetLocalVideoTrack","unsetLocalShareTrack","ONLINE","MERCURY_CONNECTION_RESTORED","OFFLINE","MERCURY_CONNECTION_LOST","MERCURY_CONNECTION_FAILURE","PeerConnectionManager","close","unsetPeerConnection","reconnection","detection","off","isUserInJoinedState","UserNotJoinedError","NoMediaEstablishedYetError","toggle","ParameterError","LOG_HEADER","MUTED","USER_INTERACTION","AUDIO","UNMUTED","UNMUTE_AUDIO_FAILURE","VIDEO","MUTE_VIDEO_FAILURE","UNMUTE_VIDEO_FAILURE","joinOptions","audioVideoOptions","join","joinResponse","getMediaStreams","addMedia","mediaResponse","media","local","JOIN_WITH_MEDIA_FAILURE","validate","ReconnectInProgress","resolve","MEETING_RECONNECTION_STARTING","MEETING_RECONNECTION_SUCCESS","MEETING_RECONNECTION_FAILURE","ReconnectionError","MEETING_RECONNECT_FAILURE","uploadLogs","reset","joinFailed","joinSuccess","rejoin","setCorrelationId","CALL_INITIATED","JOIN_ATTEMPT","MEETING_STATE_MACHINE","RINGING","ring","_JOIN_","resourceId","destination","meetingQuality","QUALITY_LEVELS","errorMessage","Error","setLocalQualityLevel","setRemoteQualityLevel","joinMeetingOptions","fail","JOIN_FAILURE","mediaCapabilities","rx","share_audio","whiteboard","tx","moveMedia","moveToResource","updateMedia","oldCorrelationId","meetings","meetingCollection","set","leaveMeeting","moveMeeting","delete","meetingState","FULL_STATE","ACTIVE","MeetingNotActiveError","isUserInLeftState","guest","isUserInIdleState","UserInLobbyError","MEDIA_CAPABILITIES","validateOptions","setMediaPeerConnection","createPeerConnection","setMercuryListener","setPeerConnectionEvents","preMedia","attachMedia","remoteQualityLevel","enableRtx","setRemoteStream","startInternalStats","autoSendMQA","startMediaQualityMetrics","enableStatsAnalyzer","StatsAnalyzer","MEDIA_QUALITY","intervalMetadata","peerReflexiveIP","geoHintInfo","clientAddress","DEFAULT_IP","intervalData","networkType","MEETING_HIGH_PACKETLOSS","autoDowngradeEnabled","canUpdateMedia","HIGH","setLocalVideoQuality","MEDIUM","LOW","packetLossRatio","ADD_MEDIA_FAILURE","timerCount","joiningTimer","sendRoapMediaRequest","sdp","connectionState","CONNECTION_STATE","stabilityTimeout","setTimeout","PC_BAIL_TIMEOUT","once","clearTimeout","code","InvalidSdpError","CODE","MEETING_REMOVED_REASON","MEETING_CONNECTION_FAILED","signalingState","SDP","STABLE","previousSendShareStatus","setContentSlides","UPDATE_MEDIA_FAILURE","checkForStopShare","startShare","previousMediaDirection","sendTrack","receiveTrack","updateTransceiver","setLocalTracks","AudioStateMachine","VideoStateMachine","previousShareStatus","stopFloorRequest","skipSignalingCheck","delay","sharingModeIsActive","isSharingOutOfSync","isLocalShareLive","setMediaDirection","_INCOMING_","acknowledgeMeeting","response","ALERT_DISPLAYED","declineMeeting","decline","LEAVE","canProceed","leaveReason","CLIENT_LEAVE_REQUEST","MEETING_LEAVE_FAILURE","content","mediaShares","find","element","CONTENT","SHARE_INITIATED","changeMeetingFloor","personUrl","uri","resourceUrl","MEETING_SHARE_FAILURE","SHARE_STOPPED","STOP_FLOOR_REQUEST_FAILURE","startRecording","stopRecording","pauseRecording","resumeRecording","lockMeeting","unlockMeeting","tones","enableDTMF","sendDTMF","layoutType","LAYOUT_TYPES","includes","changeVideoLayout","onFullLocus","level","updateVideo","previousLevel","SET_MEETING_QUALITY_FAILURE","shareConstraints","getDisplayMedia","shareStream","GET_DISPLAY_MEDIA_FAILURE","USER_ENDED_SHARE_STREAMS","stopShare","StatelessWebexPlugin"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {\n  MeetingNotActiveError, createMeetingsError, UserInLobbyError,\n  NoMediaEstablishedYetError, UserNotJoinedError, InvalidSdpError\n} from '../common/errors/webex-errors';\nimport StatsAnalyzer from '../statsAnalyzer';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport Trigger from '../common/events/trigger-proxy';\nimport Roap from '../roap/index';\nimport Media from '../media';\nimport MediaProperties from '../media/properties';\nimport MeetingStateMachine from '../meeting/state';\nimport AudioStateMachine from '../meeting/audio';\nimport VideoStateMachine from '../meeting/video';\nimport LocusInfo from '../locus-info';\nimport PeerConnectionManager from '../peer-connection-manager';\nimport Metrics from '../metrics';\nimport {trigger, mediaType, eventType} from '../metrics/config';\nimport ReconnectionManager from '../reconnection-manager';\nimport MeetingRequest from '../meeting/request';\nimport Members from '../members/index';\nimport MeetingUtil from '../meeting/util';\nimport MediaUtil from '../media/util';\nimport WebRTCStats from '../stats/index';\nimport StatsMetrics from '../stats/metrics';\nimport StatsUtil from '../stats/util';\nimport ReconnectionError from '../common/errors/reconnection';\nimport ReconnectInProgress from '../common/errors/reconnection-in-progress';\nimport {\n  _CALL_,\n  _INCOMING_,\n  _JOIN_,\n  CONNECTION_STATE,\n  CONTENT,\n  ENDED,\n  EVENT_TRIGGERS,\n  EVENT_TYPES,\n  EVENTS,\n  FLOOR_ACTION,\n  FULL_STATE,\n  LAYOUT_TYPES,\n  LIVE,\n  LOCUSINFO,\n  MEETING_REMOVED_REASON,\n  MEETING_STATE_MACHINE,\n  MEETING_STATE,\n  MEETINGS,\n  METRICS_OPERATIONAL_MEASURES,\n  MQA_STATS,\n  NETWORK_STATUS,\n  ONLINE,\n  OFFLINE,\n  PC_BAIL_TIMEOUT,\n  QUALITY_LEVELS,\n  RECORDING_STATE,\n  ROAP_SEQ_PRE,\n  SDP,\n  SENDRECV,\n  SHARE_STATUS,\n  SHARE_STOPPED_REASON,\n  STATS,\n  VIDEO_RESOLUTIONS,\n  VIDEO\n} from '../constants';\nimport ParameterError from '../common/errors/parameter';\nimport MediaError from '../common/errors/media';\nimport MQAProcessor from '../metrics/mqa-processor';\nimport BrowserDetection from '../common/browser-detection';\n\nimport InMeetingActions from './in-meeting-actions';\n\nconst {isBrowser} = BrowserDetection();\n\nconst logRequest = (request, {header = '', success = '', failure = ''}) => {\n  LoggerProxy.logger.info(header);\n\n  return request\n    .then((arg) => {\n      LoggerProxy.logger.info(success);\n\n      return arg;\n    })\n    .catch((error) => {\n      LoggerProxy.logger.error(failure, error);\n      throw error;\n    });\n};\n\n/**\n * MediaDirection\n * @typedef {Object} MediaDirection\n * @property {boolean} sendAudio\n * @property {boolean} receiveAudio\n * @property {boolean} sendVideo\n * @property {boolean} receiveVideo\n * @property {boolean} sendShare\n * @property {boolean} receiveShare\n * @property {boolean} isSharing\n */\n\n/**\n  * AudioVideo\n  * @typedef {Object} AudioVideo\n  * @property {Object} audio\n  * @property {String} audio.deviceId\n  * @property {Object} video\n  * @property {String} video.deviceId\n  */\n\n/**\n   * SharePreferences\n   * @typedef {Object} SharePreferences\n   * @property {Object} [shareConstraints]\n   * @property {Boolean} [highFrameRate]\n   */\n\n/**\n * JoinOptions\n * @typedef {Object} JoinOptions\n * @property {String} [resourceId]\n * @property {String} [pin]\n * @property {Boolean} [moderator]\n * @property {String|Object} [meetingQuality]\n * @property {String} [meetingQuality.local]\n * @property {String} [meetingQuality.remote]\n * @property {Boolean} [rejoin]\n */\n\n/**\n * SendOptions\n * @typedef {Object} SendOptions\n * @property {Boolean} sendAudio\n * @property {Boolean} sendVideo\n * @property {Boolean} sendShare\n */\n\n/**\n * Recording\n * @typedef {Object} Recording\n * @property {Object} state\n * @property {String} modifiedBy\n */\n\n/**\n  * Meeting State Change Event\n  * Emitted when ever there is a meeting state change\n  * @event meeting:stateChange\n  * @instance\n  * @type {Object}\n  * @property {String} currentState current state of the meeting\n  * @property {String} previousState previous state of the meeting\n  * @memberof Meeting\n  */\n\n/**\n  * Media Ready Event\n  * Emitted when a stream is ready to be rendered\n  * @event media:ready\n  * @instance\n  * @type {Object}\n  * @property {MediaStream} stream the media stream\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n  * Media Stopped Event\n  * Emitted when a stream has stopped sending\n  * @event media:stopped\n  * @instance\n  * @type {Object}\n  * @property {String} type what type of stream, remote, local\n  * @memberof Meeting\n  */\n\n/**\n * Meeting Ringing Event\n * Emitted when this client should play a ringing sound, because this member is getting an incoming meeting\n * or sending out an incoming meeting\n * @event meeting:ringing\n * @instance\n * @type {Object}\n * @property {String} type // INCOMING or JOIN\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Ringing Stop Event\n * Emitted when this client should stop playing a ringing sound\n * @event meeting:ringingStop\n * @instance\n * @type {Object}\n * @property {Object} type\n * @property {Boolean} type.remoteAnswered\n * @property {Boolean} type.remoteDeclined\n * @property {String} id\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Local Event\n * Emitted when this member starts sharing\n * @event meeting:startedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Local Event\n * Emitted when this member stops sharing\n * @event meeting:stoppedSharingLocal\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Started Sharing Remote Event\n * Emitted when remote sharing starts\n * @event meeting:startedSharingRemote\n * @instance\n * @type {Object}\n * @property {Boolean} memberId id of the meeting member that started screen share\n * @memberof Meeting\n */\n\n/**\n * Meeting Stopped Sharing Remote Event\n * Emitted when remote screen sharing ends\n * @event meeting:stoppedSharingRemote\n * @instance\n * @type {Object}\n * @memberof Meeting\n */\n\n/**\n * Meeting Locked Event\n * Emitted when a meeting is locked\n * @event meeting:locked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Unlocked Event\n * Emitted when a meeting is unlocked\n * @event meeting:unlocked\n * @instance\n * @type {Object}\n * @property {Object} info\n * @memberof Meeting\n */\n\n/**\n * Meeting Actions Update Event\n * Emitted when a user can take actions on a meeting such as lock, unlock, assign host\n * @event meeting:actionsUpdate\n * @instance\n * @type {Object}\n * @property {Boolean} canLock\n * @property {Boolean} canUnlock\n * @property {Boolean} canAssignHost\n * @memberof Meeting\n */\n\n/**\n * Meeting Muted By Others Event\n * Emitted when a member is muted by another member\n * @event meeting:self:mutedByOthers\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Guest Admitted Event\n * Emitted when a joined user get admitted to the meeting by another member or host\n * @event meeting:self:guestAdmitted\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n * Meeting Self Lobby Waiting Event\n * Emitted when joined user enters the lobby and is waiting for the webex meeting to begin\n * @event meeting:self:lobbyWaiting\n * @instance\n * @type {Object}\n * @property {Object} payload\n * @memberof Meeting\n */\n\n/**\n  * Reconnection Starting Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionStarting\n  * @instance\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Success Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionSuccess\n  * @instance\n  * @type {Object}\n  * @property {Object} reconnect\n  * @memberof Meeting\n  */\n\n/**\n  * Reconnection Failure Event\n  * Emitted when reconnection of media to the active meeting was successful\n  * @event meeting:reconnectionFailure\n  * @instance\n  * @type {Object}\n  * @property {Error} error\n  * @memberof Meeting\n  */\n\n/**\n  * Meeting High Packet Loss Event\n  * Emitted when ever there is high packet loss detected\n  * @event meeting:highPacketLoss\n  * @type {Object}\n  * @property {String} mediaType Type of media experiencing packet loss\n  * @property {Number} packetLossRatio current packet loss ratio\n  * @memberof Meeting\n  */\n\n/**\n * @description Meeting is the crux of the plugin\n * @export\n * @class Meeting\n */\nexport default class Meeting extends StatelessWebexPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @constructor\n   * @memberof Meeting\n  */\n  constructor(attrs, options) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.options = options;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.id = uuid.v4();\n    /**\n     * Correlation ID used for network tracking of meeting join\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.correlationId = this.id;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.userId = attrs.userId;\n    /**\n     * Organization ID\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.orgId = attrs.orgId;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.resource = attrs.resource;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.deviceUrl = attrs.deviceUrl;\n    /**\n     * @description set you -1 as default values is 0 (used to idenfify if 1st roap request was sent)\n     * @instance\n     * @type {Number}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roapSeq = ROAP_SEQ_PRE;\n    /**\n     * @instance\n     * @type {Object}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    // TODO: needs to be defined as a class\n    this.meetingInfo = {};\n    /**\n     * @instance\n     * @type {Members}\n     * @public\n     * @memberof Meeting\n     */\n    this.members = new Members({locusUrl: (attrs.locus && attrs.locus.url)}, {parent: this.webex});\n    /**\n     * @instance\n     * @type {Roap}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.roap = new Roap({}, {parent: this.webex});\n    /**\n     * created later\n     * @instance\n     * @type {ReconnectionManager}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.reconnectionManager = new ReconnectionManager(this);\n    /**\n     * created later\n     * @instance\n     * @type {AudioStateMachine}\n     * @public\n     * @memberof Meeting\n     */\n    this.audio = null;\n    /**\n     * created later\n     * @instance\n     * @type {VideoStateMachine}\n     * @public\n     * @memberof Meeting\n     */\n    this.video = null;\n    /**\n     * @instance\n     * @type {MeetingStateMachine}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.meetingFiniteStateMachine = MeetingStateMachine.create(this);\n    /**\n     * @instance\n     * @type {WebRTCStats}\n     * @public\n     * @memberof Meeting\n     */\n    this.stats = null;\n    /**\n     * @instance\n     * @type {WebRTCStats}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.internalStats = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.conversationUrl = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.locusUrl = (attrs.locus && attrs.locus.url) || null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.sipUri = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.partner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.type = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.owner = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.hostId = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.policy = null;\n    /**\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.meetingRequest = new MeetingRequest({}, options);\n\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MediaProperties}\n     * @public\n     * @memberof Meeting\n     */\n    this.mediaProperties = new MediaProperties();\n    /**\n     * @instance\n     * @type {InMeetingActions}\n     * @public\n     * @memberof Meeting\n    */\n    this.inMeetingActions = new InMeetingActions();\n    /**\n     * This is deprecated, please use shareStatus instead.\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     * @deprecated after v1.118.13\n     */\n    this.isSharing = false;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.shareStatus = SHARE_STATUS.NO_SHARE;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    Object.defineProperty(this, 'isLocalShareLive', {\n      get: () => {\n        const {shareTransceiver} = this.mediaProperties.peerConnection;\n        const shareDirection = shareTransceiver?.direction;\n        const trackReadyState = shareTransceiver?.sender?.track?.readyState;\n        const activeShare = trackReadyState === LIVE;\n        const offersToSendData = shareDirection === SENDRECV;\n\n        if (activeShare && offersToSendData) {\n          return true;\n        }\n\n        return false;\n      },\n      configurable: true\n    });\n    /**\n     * @instance\n     * @type {Array}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.callEvents = [];\n    /**\n     * There is a pending floor requested by the user\n     * @instance\n     * @type {floorGrantPending}\n     * @private\n     * @memberof Meeting\n     */\n    this.floorGrantPending = false;\n    /**\n     * @instance\n     * @type {MediaMetrics}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.mediaQualityMetrics = null;\n    /**\n     * @instance\n     * @type {StatsAnalyzer}\n     * @private\n     * @memberof Meeting\n     */\n    this.statsAnalyzer = null;\n    /**\n     * @instance\n     * @type {MQAProcessor}\n     * @readonly\n     * @private\n     * @memberof Meeting\n     */\n    this.mqaProcessor = null;\n    /**\n     * @instance\n     * @type {String}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.networkStatus = null;\n    /**\n     * Passing only info as we send basic info for meeting added event\n     * @instance\n     * @type {MeetingRequest}\n     * @private\n     * @memberof Meeting\n     */\n    this.locusInfo = new LocusInfo(this.updateMeetingObject.bind(this), this.webex, this.id);\n    // We had to add listeners first before setting up the locus instance\n    /**\n     * @instance\n     * @type {Recording}\n     * @readonly\n     * @public\n     * @memberof Meeting\n     */\n    this.recording = null;\n\n    /**\n     * Promise that exists if joining, and resolves upon method completion.\n     * @instance\n     * @type {Promise}\n     * @private\n     * @memberof Meeting\n     */\n    this.deferJoin = undefined;\n\n    /**\n     * Staus of websocket connection/mercury connection.\n     * @instance\n     * @type {Boolean}\n     * @private\n     * @memberof Meeting\n     */\n    this.hasWebsocketConnected = this.webex.internal.mercury.connected;\n\n    this.setUpLocusInfoListeners();\n    this.locusInfo.init(attrs.locus ? attrs.locus : {});\n  }\n\n  /**\n   * Proxy function for all the listener set ups\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoListeners() {\n    // meeting update listeners\n    this.setUpLocusInfoSelfListener();\n    this.setUpLocusInfoMeetingListener();\n    // members update listeners\n    this.setUpLocusFullStateListener();\n    this.setUpLocusUrlListener();\n    this.setUpLocusHostListener();\n    this.setUpLocusSelfListener();\n    this.setUpLocusParticipantsListener();\n    this.setupLocusControlsListener();\n    this.setUpLocusMediaSharesListener();\n    this.setUpLocusInfoMeetingInfoListener();\n    this.setUpLocusInfoAssignHostListener();\n    this.setUpLocusInfoMediaInactiveListener();\n  }\n\n\n  /**\n   * Set up the locus info listener for meetings disconnected due to inactivity\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMediaInactiveListener() {\n    this.locusInfo.on(EVENTS.DISCONNECT_DUE_TO_INACTIVITY, (res) => {\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.DISCONNECT_DUE_TO_INACTIVITY,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n\n      // Upload logs on media inactivity\n      // Normally media should not be inactive\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoMediaInactiveListener'\n        },\n        EVENTS.REQUEST_UPLOAD_LOGS,\n        this\n      );\n\n      // TODO: need to send metric for locus disconnect\n      LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMediaInactiveListener --> Meeting disconnected due to inactivity: ${res.reason}`);\n      this.reconnect();\n    });\n  }\n\n  /**\n   * Set up the locus info listener for assign host permissions on a meeting\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoAssignHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusInfoAssignHostListener'\n        },\n        EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n        {\n          canAssignHost: payload.canAssignHost,\n          canLock: this.inMeetingActions.getCanLock(),\n          canUnlock: this.inMeetingActions.getCanUnlock()\n        }\n      );\n      this.inMeetingActions.setCanAssignHost(payload.canAssignHost);\n    });\n  }\n\n  /**\n   * Set up the internal locus info full state object listener\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusFullStateListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE, (payload) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setUpLocusFullStateListener'\n        },\n        EVENT_TRIGGERS.MEETING_STATE_CHANGE,\n        {\n          payload\n        }\n      );\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE, (payload) => {\n      this.members.locusFullStateTypeUpdate(payload);\n    });\n  }\n\n  /**\n   * get the metrics payload pre\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Object}\n   * @memberof Meeting\n   */\n  getAnalyzerMetricsPrePayload(options) {\n    if (options) {\n      const {event, trackingId, locus} = options;\n\n      if (!event) {\n        LoggerProxy.logger.error('Meeting:index#getAnalyzerMetricsPrePayload --> Error [Call Analyzer Event', event || '', `]: invalid identifers or event type! ${this.correlationId}`);\n\n        return null;\n      }\n\n      const identifiers = {\n        correlationId: this.correlationId,\n        userId: this.userId,\n        deviceId: this.deviceUrl,\n        orgId: this.orgId\n      };\n\n      // If locus is passed take the value from there else use meeting object\n      if (locus) {\n        identifiers.locusId = locus.url.split('/').pop();\n        identifiers.locusStartTime = locus.fullState.lastActive;\n      }\n      else if (this.locusUrl && this.locusInfo.fullState) {\n        identifiers.locusId = this.locusUrl && this.locusUrl.split('/').pop();\n        identifiers.locusStartTime = this.locusInfo.fullState && this.locusInfo.fullState.lastActive;\n      }\n\n      if (options.trackingId) {\n        identifiers.trackingId = trackingId;\n      }\n\n      let payload = {};\n\n      if (options.type === MQA_STATS.CA_TYPE) {\n        payload = Metrics.initMediaPayload(options.event, identifiers, options);\n      }\n\n      else {\n        payload = Metrics.initPayload(options.event, identifiers, options);\n      }\n\n      return payload;\n    }\n\n    return null;\n  }\n\n  /**\n   * Send the metrics to call-analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendCallAnalyzerMetrics(options) {\n    const payload = this.getAnalyzerMetricsPrePayload(options);\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * Send the metrics to Media Quality Analyzer dashboard\n   * @param {Object} options\n   * @param {String} options.event\n   * @param {String} options.trackingId\n   * @param {Object} options.locus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  sendMediaQualityAnalyzerMetrics(options) {\n    options.type = MQA_STATS.CA_TYPE;\n    options.clientType = this.config.metrics.clientType;\n    options.subClientType = this.config.metrics.subClientType;\n    const payload = this.getAnalyzerMetricsPrePayload(options);\n\n    return this.webex.internal.metrics.submitCallDiagnosticEvents(payload);\n  }\n\n  /**\n   * sets the network status on meeting object\n   * @param {String} networkStatus\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  setNetworkStatus(networkStatus) {\n    if (networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_DISCONNECTED,\n      );\n    }\n    else if (networkStatus === NETWORK_STATUS.CONNECTED && this.networkStatus === NETWORK_STATUS.DISCONNECTED) {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setNetworkStatus'\n        },\n        EVENT_TRIGGERS.MEETINGS_NETWORK_CONNECTED,\n      );\n    }\n\n    this.networkStatus = networkStatus;\n  }\n\n  /**\n   * Set up the locus info self listener\n   * update self value for members and updates the member\n   * notifies consumer with members:self:update {activeSelfId endedSelfId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusSelfListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_SELF, (payload) => {\n      this.members.locusSelfUpdate(payload);\n\n      // If user moved to a JOINED state and there is a pending floor grant trigger it\n      if (this.floorGrantPending && payload.newSelf.state === MEETING_STATE.STATES.JOINED) {\n        this.share()\n          .then(() => { this.floorGrantPending = false; });\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info host listener\n   * update host value for members and updates the member\n   * notifies consumer with members:host:update: {activeHostId, endedHostId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusHostListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_HOST, (payload) => {\n      this.members.locusHostUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info participants update listener\n   * update members collection value for members\n   * notifies consumer with members:update\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusParticipantsListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS, (payload) => {\n      this.members.locusParticipantsUpdate(payload);\n    });\n  }\n\n\n  /**\n   * Set up the locus info recording update listener\n   * update recording value for the meeting\n   * notifies consumer with:\n   *  meeting:recording:started\n   *  meeting:recording:stopped\n   *  meeting:recording:paused\n   *  meeting:recording:resumed\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setupLocusControlsListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n      ({state, modifiedBy, lastModified}) => {\n        let event;\n\n        switch (state) {\n          case RECORDING_STATE.RECORDING:\n            event = EVENT_TRIGGERS.MEETING_STARTED_RECORDING;\n            break;\n          case RECORDING_STATE.IDLE:\n            event = EVENT_TRIGGERS.MEETING_STOPPED_RECORDING;\n            break;\n          case RECORDING_STATE.PAUSED:\n            event = EVENT_TRIGGERS.MEETING_PAUSED_RECORDING;\n            break;\n          case RECORDING_STATE.RESUMED:\n            event = EVENT_TRIGGERS.MEETING_RESUMED_RECORDING;\n            break;\n          default:\n            event = null;\n            break;\n        }\n\n        // `RESUMED` state should be converted to `RECORDING` after triggering the event\n        this.recording = {\n          state: state === RECORDING_STATE.RESUMED ? RECORDING_STATE.RECORDING : state,\n          modifiedBy,\n          lastModified\n        };\n\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setupLocusControlsListener'\n          },\n          event,\n          this.recording\n        );\n      });\n  }\n\n  /**\n   * Set up the locus info media shares listener\n   * update content sharing id value for members, and updates the member\n   * notifies consumer with members:content:update {activeContentSharingId, endedContentSharingId}\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusMediaSharesListener() {\n    // Will get triggered on local and remote share\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES, (payload) => {\n      const {contentId, disposition} = payload.current;\n\n      if (\n        contentId === payload.previous?.contentId &&\n        disposition === payload.previous?.disposition\n      ) {\n        // nothing changed, so ignore\n        // (this happens when we steal presentation from remote)\n        return;\n      }\n\n      let newShareStatus = this.shareStatus;\n\n      // check if remote started sharing\n      if (\n        this.selfId !== contentId &&\n        disposition === FLOOR_ACTION.GRANTED\n      ) {\n        newShareStatus = SHARE_STATUS.REMOTE_SHARE_ACTIVE;\n      }\n      // or if we started sharing\n      else if (\n        this.selfId === contentId &&\n        disposition === FLOOR_ACTION.GRANTED\n      ) {\n        newShareStatus = SHARE_STATUS.LOCAL_SHARE_ACTIVE;\n      }\n      // or if sharing has been stopped\n      else if (\n        payload.previous &&\n        disposition === FLOOR_ACTION.RELEASED\n      ) {\n        newShareStatus = SHARE_STATUS.NO_SHARE;\n      }\n\n      if (newShareStatus !== this.shareStatus) {\n        const oldShareStatus = this.shareStatus;\n\n        // update our state before we send out any notifications\n        this.shareStatus = newShareStatus;\n\n        // send out \"stop\" notifications for the old state\n        switch (oldShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meetings/index',\n                function: 'remoteShare'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_REMOTE\n            );\n            break;\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'stopFloorRequest'\n              },\n              EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n              {\n                reason: SHARE_STOPPED_REASON.SELF_STOPPED\n              }\n            );\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n            // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        // send \"start\" notifications for the new state\n        switch (newShareStatus) {\n          case SHARE_STATUS.REMOTE_SHARE_ACTIVE: {\n            const sendStartedSharingRemote = () => {\n              Trigger.trigger(\n                this,\n                {\n                  file: 'meetings/index',\n                  function: 'remoteShare'\n                },\n                EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n                {\n                  memberId: contentId\n                }\n              );\n            };\n\n            // if a remote participant is stealing the presentation from us\n            if (this.mediaProperties.mediaDirection?.sendShare) {\n              this.updateShare({\n                sendShare: false,\n                receiveShare: this.mediaProperties.mediaDirection.receiveShare\n              })\n                .finally(() => {\n                  sendStartedSharingRemote();\n                });\n            }\n            else {\n              sendStartedSharingRemote();\n            }\n            break;\n          }\n\n          case SHARE_STATUS.LOCAL_SHARE_ACTIVE:\n            Trigger.trigger(\n              this,\n              {\n                file: 'meeting/index',\n                function: 'share'\n              },\n              EVENT_TRIGGERS.MEETING_STARTED_SHARING_LOCAL,\n            );\n            Metrics.postEvent({event: eventType.LOCAL_SHARE_FLOOR_GRANTED, meeting: this});\n            break;\n\n          case SHARE_STATUS.NO_SHARE:\n          // nothing to do\n            break;\n\n          default:\n            break;\n        }\n\n        this.members.locusMediaSharesUpdate(payload);\n      }\n      else if (newShareStatus === SHARE_STATUS.REMOTE_SHARE_ACTIVE) {\n        // if we got here, then some remote participant has stolen\n        // the presentation from another remote participant\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings/index',\n            function: 'remoteShare'\n          },\n          EVENT_TRIGGERS.MEETING_STARTED_SHARING_REMOTE,\n          {\n            memberId: contentId\n          }\n        );\n        this.members.locusMediaSharesUpdate(payload);\n      }\n    });\n  }\n\n  /**\n   * Set up the locus info url listener\n   * update locus_url value for members\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusUrlListener() {\n    this.locusInfo.on(EVENTS.LOCUS_INFO_UPDATE_URL, (payload) => {\n      this.members.locusUrlUpdate(payload);\n    });\n  }\n\n  /**\n   * Set up the locus info meeting info listener\n   * @returns {undefined}\n   * @private\n   * @memberof meeting\n   */\n  setUpLocusInfoMeetingInfoListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_LOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_LOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_UNLOCKED, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingInfoListener'\n          },\n          EVENT_TRIGGERS.MEETING_UNLOCKED,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEETING_INFO_UPDATED, (payload) => {\n      if (payload && payload.info) {\n        let newCanLock;\n        let newCanUnlock;\n\n        if (payload.self && !payload.self.moderator) {\n          newCanLock = false;\n          newCanUnlock = false;\n        }\n        else {\n          newCanLock = MeetingUtil.canUserLock(payload.info.moderator, payload.info.policy);\n          newCanUnlock = MeetingUtil.canUserUnlock(payload.info.moderator, payload.info.policy);\n        }\n\n        if (newCanLock && !this.inMeetingActions.canLock) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            {\n              canLock: true,\n              canUnlock: false,\n              canAssignHost: this.inMeetingActions.getCanAssignHost()\n            }\n          );\n        }\n        if (newCanUnlock && !this.inMeetingActions.canUnlock || !newCanLock) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'setUpLocusInfoMeetingInfoListener'\n            },\n            EVENT_TRIGGERS.MEETING_ACTIONS_UPDATE,\n            {\n              canLock: false,\n              canUnlock: true,\n              canAssignHost: this.inMeetingActions.getCanAssignHost()\n            }\n          );\n        }\n        this.inMeetingActions.setCanLock(newCanLock || false);\n        this.inMeetingActions.setCanUnlock(newCanUnlock || false);\n      }\n    });\n  }\n\n  /**\n   * Internal function to listen to the self object changes\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoSelfListener() {\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_MUTED_BY_OTHERS, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_MUTED_BY_OTHERS,\n          {\n            payload\n          }\n        );\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_LOBBY_WAITING,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_ENTERED,\n          meeting: this\n        });\n      }\n    });\n    this.locusInfo.on(LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST, (payload) => {\n      if (payload) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoSelfListener'\n          },\n          EVENT_TRIGGERS.MEETING_SELF_GUEST_ADMITTED,\n          {\n            payload\n          }\n        );\n\n        Metrics.postEvent({\n          event: eventType.LOBBY_EXITED,\n          meeting: this\n        });\n      }\n    });\n\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_INACTIVITY, () => {\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.MEETING_MEDIA_INACTIVE,\n        {\n          correlation_id: this.correlationId,\n          locus_id: this.locusId\n        }\n      );\n      this.reconnect();\n    });\n\n    // There is two stats for mute one is the actual media being sent or received\n    // The second on is if the audio is muted, we need to tell the statsAnalyzer when\n    // the audio is muted or the user is not willing to send media\n    this.locusInfo.on(LOCUSINFO.EVENTS.MEDIA_STATUS_CHANGE, (status) => {\n      if (this.statsAnalyzer) {\n        this.statsAnalyzer.updateMediaStatus({\n          actual: status,\n          expected: {\n            // We need to check what should be the actual direction of media\n            sendAudio: this.mediaProperties.mediaDirection?.sendAudio && !this.audio?.isMuted(),\n            sendVideo: this.mediaProperties.mediaDirection?.sendVideo && !this.video?.isMuted(),\n            sendShare: this.mediaProperties.mediaDirection?.sendShare,\n            receiveAudio: this.mediaProperties.mediaDirection?.receiveAudio,\n            receiveVideo: this.mediaProperties.mediaDirection?.receiveVideo,\n            receiveShare: this.mediaProperties.mediaDirection?.receiveShare\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Add LocusInfo nested object listeners (from child to parent)\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setUpLocusInfoMeetingListener() {\n    this.locusInfo.on(EVENTS.REMOTE_RESPONSE, (payload) => {\n      this.meetingFiniteStateMachine.remote(payload);\n\n      if (payload.remoteDeclined) {\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Attempting to leave meeting.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> REMOTE_RESPONSE. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n    });\n    this.locusInfo.on(EVENTS.DESTROY_MEETING, (payload) => {\n      // if self state is NOT left\n\n      // TODO: Handle sharing and wireless sharing when meeting end\n      if (this.wirelessShare) {\n        if (this.mediaProperties.shareTrack) {\n          this.mediaProperties.shareTrack.onended = null;\n          this.mediaProperties.shareTrack.stop();\n        }\n      }\n      // when multiple WEB deviceType join with same user\n      // and some of the devices are joined and some are left\n      // when your own device is still connected you want to leave and destroy\n      // else you want to just destroy\n      // this looks odd because when it leaves it should destroy, but we get a\n      // leave response and we should destroy it on the next event loop\n      // the leave response gets parsed and we decide if we want to destroy the meeting\n      // the first time we just leave it, the second time it comes it destroys it from the collection\n      if (payload.shouldLeave) {\n        // TODO:  We should do cleaning of meeting object if the shouldLeave: false because there might be meeting object which we are not cleaning\n\n        this.leave({reason: payload.reason}).then(() => {\n          LoggerProxy.logger.warn('Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. The meeting has been left, but has not been destroyed, you should see a later event for leave.');\n        }).catch((error) => {\n          LoggerProxy.logger.error(`Meeting:index#setUpLocusInfoMeetingListener --> DESTROY_MEETING. Issue with leave for meeting, meeting still in collection: ${this.meeting}, error: ${error}`);\n        });\n      }\n      else {\n        LoggerProxy.logger.info('Meeting:index#setUpLocusInfoMeetingListener --> MEETING_REMOVED_REASON', payload.reason);\n        MeetingUtil.cleanUp(this);\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setUpLocusInfoMeetingListener'\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: payload.reason,\n            meetingId: this.id\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Set meeting values rather than events\n   * @param {Object} object\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   * // TODO: is this function necessary?\n   */\n  updateMeetingObject(object) {\n    // Validate if these are valid meeting object property\n    // TODO: add a check to make sure the value passed in the constructor\n    // is not changed by any delta event\n    if (object && Object.keys(object).length) {\n      Object.keys(object).forEach((key) => {\n        this[key] = object[key];\n      });\n    }\n  }\n\n  /**\n   * Invite a guest to the call that isn't normally part of this call\n   * @param {Object} invitee\n   * @param {String} invitee.emailAddress\n   * @param {String} invitee.email\n   * @param {Boolean} [alertIfActive]\n   * @returns {Promise} see #members.addMember\n   * @public\n   * @memberof Meeting\n   */\n  invite(invitee, alertIfActive = true) {\n    return this.members.addMember(invitee, alertIfActive);\n  }\n\n  /**\n   * Admit the guest(s) to the call once they are waiting\n   * @param {Array} memberIds\n   * @returns {Promise} see #members.admitMembers\n   * @public\n   * @memberof Meeting\n   */\n  admit(memberIds) {\n    return this.members.admitMembers(memberIds);\n  }\n\n  /**\n   * Remove the member from the meeting, boot them\n   * @param {String} memberId\n   * @returns {Promise} see #members.removeMember\n   * @public\n   * @memberof Meeting\n   */\n  remove(memberId) {\n    return this.members.removeMember(memberId);\n  }\n\n  /**\n   * Mute another member from the meeting\n   * @param {String} memberId\n   * @param {Boolean} mute\n   * @returns {Promise} see #members.muteMember\n   * @public\n   * @memberof Meeting\n   */\n  mute(memberId, mute = true) {\n    return this.members.muteMember(memberId, mute);\n  }\n\n  /**\n   * Transfer the moderator role to another eligible member\n   * @param {String} memberId\n   * @param {Boolean} moderator\n   * @returns {Promise} see #members.transferHostToMember\n   * @public\n   * @memberof Meeting\n   */\n  transfer(memberId, moderator = true) {\n    return this.members.transferHostToMember(memberId, moderator);\n  }\n\n  /**\n   * Reference to the Members object\n   * @returns {Members}\n   * @public\n   * @memberof Meeting\n   */\n  getMembers() {\n    return this.members;\n  }\n\n  /**\n   * If this gets turned off mid meeting after attaching media, it will shut down the MQA metrics and they will\n   * not restart unless the start function is called again\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  cleanMQAInterval() {\n    if (this.mqaInterval) {\n      clearInterval(this.mqaInterval);\n    }\n  }\n\n  /**\n   * Automatically publishes media metrics data and on a config interval\n   * uses the existing getStats data filter, so no new streams are created\n   * but it is separate than history, so history will not be available\n   * @returns {MediaMetrics}\n   * @public\n   * @memberof Meeting\n   */\n  startMediaQualityMetrics() {\n    const automaticMetrics = new StatsMetrics({config: this.config});\n\n    const stats = this.getStats(automaticMetrics.initialize(), true);\n\n    this.mediaQualityMetrics = automaticMetrics;\n\n    this.mediaQualityMetrics.setStats(stats);\n\n    this.mqaInterval = setInterval(() => this.processMQAData(), this.config.metrics.mqaMetricsInterval);\n\n    return automaticMetrics;\n  }\n\n  /**\n   * @private\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  processMQAData() {\n    if (!this.mqaProcessor) {\n      this.mqaProcessor = new MQAProcessor();\n    }\n\n    MQA_STATS.DATA_PLACEMENTS.forEach((key) => {\n      if (this.mediaQualityMetrics && this.mediaQualityMetrics.stats) {\n        let sendRecvData;\n\n        if (key.toLowerCase().endsWith(STATS.SENDER)) {\n          sendRecvData = this.mediaQualityMetrics.stats.getSender(key);\n        }\n        else if (key.toLowerCase().endsWith(STATS.RECEIVER)) {\n          sendRecvData = this.mediaQualityMetrics.stats.getReceiver(key);\n        }\n        let mqa;\n\n        if (sendRecvData) {\n          mqa = sendRecvData.getMQA();\n        }\n        if (mqa) {\n          const interval = mqa.getSlice(this.config.metrics.mqaMetricsInterval / 1000); // milliseconds -> second based intervals\n\n          this.mqaProcessor.process(key, interval);\n        }\n      }\n    });\n  }\n\n  /**\n   * Reference to the stats builder object\n   * @param {Object} options - see #createStats\n   * @param {Boolean} override - override the previous getStats\n   * @returns {WebRTCStats}\n   * @public\n   * @memberof Meeting\n   */\n  getStats(options, override) {\n    if (!this.stats) {\n      return this.createStats(options);\n    }\n    if (override) {\n      if (this.stats) {\n        LoggerProxy.logger.log('Meeting:index#getStats --> Overriding the previous stats object without destroying first can result in memory leaks.');\n      }\n\n      return this.createStats(options);\n    }\n\n    return this.stats;\n  }\n\n  /**\n   * write the stats builder object and assign to meeting property\n   * @param {Object} options\n   * @returns {WebRTCStats}\n   * @public\n   * @memberof Meeting\n   */\n  createStats(options = {}) {\n    StatsUtil.generateOptions(options, STATS.CONFIG, this);\n\n    options.config = STATS.CONFIG;\n\n    this.stats = new WebRTCStats(this.attrs, this.options, options);\n\n    return this.stats;\n  }\n\n  /**\n   * if you have started a stats instance, here's how you can stop it\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  stopStats() {\n    if (this.stats) {\n      this.stats.destroySenders();\n      this.stats.destroyReceivers();\n      this.stats = null;\n    }\n  }\n\n  /**\n   * Convenience function to tell whether a meeting is muted\n   * @returns {Boolean} if meeting audio muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isAudioMuted() {\n    return this.audio && this.audio.isMuted();\n  }\n\n  /**\n   * Convenience function to tell if the end user last changed the audio state\n   * @returns {Boolean} if audio was manipulated by the end user\n   * @public\n   * @memberof Meeting\n   */\n  isAudioSelf() {\n    return this.audio && this.audio.isSelf();\n  }\n\n  /**\n   * Convenience function to tell whether video is muted\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoMuted() {\n    return this.video && this.video.isMuted();\n  }\n\n  /**\n   * Convenience function to tell whether the end user changed the video state\n   * @returns {Boolean} if meeting video is muted or not\n   * @public\n   * @memberof Meeting\n   */\n  isVideoSelf() {\n    return this.video && this.video.isSelf();\n  }\n\n  /**\n   * Sets the meeting info on the class instance\n   * @param {Object} meetingInfo\n   * @param {Object} meetingInfo.body\n   * @param {String} meetingInfo.body.conversationUrl\n   * @param {String} meetingInfo.body.locusUrl\n   * @param {String} meetingInfo.body.sipUri\n   * @param {Object} meetingInfo.body.owner\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseMeetingInfo(meetingInfo) {\n    // MeetingInfo will be undefined for 1:1 calls\n    if (meetingInfo && meetingInfo.body && !(meetingInfo.errors && meetingInfo.errors.length > 0)) {\n      this.conversationUrl = meetingInfo.body.conversationUrl || this.conversationUrl;\n      this.locusUrl = meetingInfo.body.locusUrl || this.locusUrl;\n      this.setSipUri(meetingInfo.body.sipMeetingUri || this.sipUri);\n      this.owner = meetingInfo.body.owner || this.owner;\n    }\n  }\n\n  /**\n   * Sets the first locus info on the class instance\n   * @param {Object} locus\n   * @param {String} locus.url\n   * @param {Array} locus.participants\n   * @param {Object} locus.self\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  parseLocus(locus) {\n    if (locus) {\n      this.locusUrl = locus.url;\n      // TODO: move this to parse participants module\n      this.setLocus(locus);\n\n      // check if we can extract this info from partner\n      // Parsing of locus object must be finished at this state\n      if (locus.participants && locus.self) {\n        this.partner = MeetingUtil.getLocusPartner(locus.participants, locus.self);\n      }\n\n      // For webex meeting the sipUrl gets updated in info parser\n      if (!this.sipUri && this.partner && this.type === _CALL_) {\n        this.setSipUri(this.partner.person.sipUrl || this.partner.person.id);\n      }\n    }\n  }\n\n  /**\n   * Sets the sip uri on the class instance\n   * uses meeting info as precedence\n   * @param {String} sipUri\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setSipUri(sipUri) {\n    // This can be tel no, device id or a sip uri, user Id\n    this.sipUri = sipUri;\n  }\n\n  /**\n   * Set the roap seq on the class instance\n   * @param {Number} seq\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setRoapSeq(seq) {\n    if (seq >= 0) {\n      this.roapSeq = seq;\n    }\n  }\n\n  /**\n   * Set the locus info the class instance\n   * @param {Object} locus\n   * @param {Array} locus.mediaConnections\n   * @param {String} locus.locusUrl\n   * @param {String} locus.locusId\n   * @param {String} locus.mediaId\n   * @param {Object} locus.host\n   * @todo change name to genertic parser\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setLocus(locus) {\n    const mtgLocus = locus.locus || locus;\n\n    // LocusInfo object saves the locus object\n    // this.locus = mtgLocus;\n    this.mediaConnections = locus.mediaConnections;\n    this.locusUrl = locus.locusUrl || locus.url;\n    this.locusId = locus.locusId;\n    this.selfId = locus.selfId;\n    this.mediaId = locus.mediaId;\n    this.hostId = mtgLocus.host ? mtgLocus.host.id : this.hostId;\n    this.locusInfo.initialSetup(mtgLocus);\n  }\n\n  /**\n   * Sets the remote stream on the class instance and emits and\n   * event to developers\n   * @param {Object} pc The remote stream peer connection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setRemoteStream(pc) {\n    if (!pc) {\n      return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    pc.ontrack = (event) => {\n      // eslint-disable-next-line no-warning-comments\n      // TODO: It's possible for media to not be present\n      // so we might need to either\n      // A) wait until we have media flowing\n      // B) trigger a second event when video is flowing\n      LoggerProxy.logger.log(`Meeting:index#setRemoteStream --> ontrack event received for peerConnection: ${event}`);\n\n      const MEDIA_ID = {\n        AUDIO_TRACK: '0',\n        VIDEO_TRACK: '1',\n        SHARE_TRACK: '2'\n      };\n      let eventType = null;\n      const mediaTrack = event.track;\n      let trackMediaID = null;\n\n\n      // In case of safari some time the transceiver is not present for specific os version\n      // sdk tries to determine the transceive using the track id present\n      if (event.transceiver && event.transceiver.mid) {\n        trackMediaID = event.transceiver.mid;\n      }\n      else {\n        const {audioTransceiver, videoTransceiver, shareTransceiver} = event.target;\n\n        // audio kind indicates its a audio stream\n        if (mediaTrack.id === audioTransceiver.receiver.track.id) {\n          trackMediaID = '0';\n        }\n        else\n        if (mediaTrack.id === videoTransceiver.receiver.track.id) {\n          trackMediaID = '1';\n        }\n        else\n        if (mediaTrack.id === shareTransceiver.receiver.track.id) {\n          trackMediaID = '2';\n        }\n        else {\n          trackMediaID = null;\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.MUTE_AUDIO_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop()\n            }\n          );\n        }\n      }\n\n\n      switch (trackMediaID) {\n        case MEDIA_ID.AUDIO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_AUDIO;\n          this.mediaProperties.setRemoteAudioTrack(mediaTrack);\n          break;\n        case MEDIA_ID.VIDEO_TRACK:\n          eventType = EVENT_TYPES.REMOTE_VIDEO;\n          this.mediaProperties.setRemoteVideoTrack(mediaTrack);\n          break;\n        case MEDIA_ID.SHARE_TRACK:\n          if (event.track) {\n            eventType = EVENT_TYPES.REMOTE_SHARE;\n            this.mediaProperties.setRemoteShare(mediaTrack);\n          }\n          break;\n        default: {\n          LoggerProxy.logger.log('Meeting:index#setRemoteStream --> no matching media track id');\n        }\n      }\n\n      // start stats here the stats are coming null if you dont receive streams\n\n      this.statsAnalyzer.startAnalyzer(this.mediaProperties.peerConnection);\n\n      if (eventType && mediaTrack) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'setRemoteStream:pc.ontrack'\n          },\n          EVENT_TRIGGERS.MEDIA_READY,\n          {\n            type: eventType,\n            stream: MediaUtil.createMediaStream([mediaTrack])\n          }\n        );\n      }\n    };\n  }\n\n  /**\n   * Upload logs for the current meeting\n   * @param {object} options file name and function name\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  uploadLogs(options = {file: 'meeting/index', function: 'uploadLogs'}) {\n    Trigger.trigger(\n      this,\n      options,\n      EVENTS.REQUEST_UPLOAD_LOGS,\n      this\n    );\n  }\n\n\n  /**\n   * Removes remote audio and video stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  unsetRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#unsetRemoteStream --> [DEPRECATION WARNING]: unsetRemoteStream has been deprecated after v1.89.3');\n    this.mediaProperties.unsetRemoteMedia();\n  }\n\n  /**\n   * Removes remote audio, video and share tracks from class instance's mediaProperties\n   * @returns {undefined}\n   */\n  unsetRemoteTracks() {\n    this.mediaProperties.unsetRemoteTracks();\n  }\n\n  /**\n   * Removes the remote stream on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   * @deprecated after v1.89.3\n   */\n  closeRemoteStream() {\n    LoggerProxy.logger.warn('Meeting:index#closeRemoteStream --> [DEPRECATION WARNING]: closeRemoteStream has been deprecated after v1.89.3');\n    this.closeRemoteTracks();\n  }\n\n  /**\n   * Removes the remote tracks on the class instance and triggers an event\n   * to developers\n   * @returns {undefined}\n   * @memberof Meeting\n   */\n  closeRemoteTracks() {\n    const {\n      remoteAudioTrack,\n      remoteVideoTrack,\n      remoteShare\n    } = this.mediaProperties;\n\n    /**\n     * Triggers an event to the developer\n     * @param {string} mediaType Type of media that was stopped\n     * @returns {void}\n     * @inner\n     */\n    const triggerMediaStoppedEvent = (mediaType) => {\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'closeRemoteTracks'\n        },\n        EVENT_TRIGGERS.MEDIA_STOPPED,\n        {\n          type: mediaType\n        }\n      );\n    };\n\n    /**\n     * Stops a media track and emits an event\n     * @param {MediaStreamTrack} track Media track to stop\n     * @param {string} type Media track type\n     * @returns {Promise}\n     * @inner\n     */\n    // eslint-disable-next-line arrow-body-style\n    const stopTrack = (track, type) => {\n      return Media.stopTracks(track)\n        .then(() => {\n          const isTrackStopped = track && track.readyState === ENDED;\n          const isWrongReadyState = track && !isTrackStopped;\n\n          if (isTrackStopped) {\n            triggerMediaStoppedEvent(type);\n          }\n          else if (isWrongReadyState) {\n            LoggerProxy.logger.warn(`Meeting:index#closeRemoteTracks --> Error: MediaStreamTrack.readyState is ${track.readyState} for ${type}`);\n          }\n        });\n    };\n\n    return Promise.all([\n      stopTrack(remoteAudioTrack, EVENT_TYPES.REMOTE_AUDIO),\n      stopTrack(remoteVideoTrack, EVENT_TYPES.REMOTE_VIDEO),\n      stopTrack(remoteShare, EVENT_TYPES.REMOTE_SHARE)\n    ]);\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localStream the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalTracks(localStream) {\n    if (localStream) {\n      const {audioTrack, videoTrack} = MeetingUtil.getTrack(localStream);\n      let settings = null;\n\n      if (audioTrack) {\n        settings = audioTrack.getSettings();\n        this.mediaProperties.setMediaSettings('audio', {\n          echoCancellation: settings.echoCancellation,\n          noiseSuppression: settings.noiseSuppression\n        });\n\n        LoggerProxy.logger.log('Meeting:index#setLocalTracks --> Audio settings.', JSON.stringify(this.mediaProperties.mediaSettings.audio));\n        this.mediaProperties.setLocalAudioTrack(audioTrack);\n      }\n\n      if (videoTrack) {\n        settings = videoTrack.getSettings();\n        this.mediaProperties.setLocalVideoTrack(videoTrack);\n        this.mediaProperties.setMediaSettings('video', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width\n        });\n        // store and save the selected video input device\n        if (settings.deviceId) {\n          this.mediaProperties.setVideoDeviceId(settings.deviceId);\n        }\n        LoggerProxy.logger.log('Meeting:index#setLocalTracks --> Video settings.', JSON.stringify(this.mediaProperties.mediaSettings.video));\n      }\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalTracks'\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL,\n          stream: MediaUtil.createMediaStream([this.mediaProperties.audioTrack, this.mediaProperties.videoTrack])\n        }\n      );\n    }\n  }\n\n  /**\n   * Sets the local media stream on the class and emits an event to the developer\n   * @param {Stream} localShare the local media stream\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setLocalShareTrack(localShare) {\n    let settings = null;\n\n    if (localShare) {\n      this.mediaProperties.setLocalShareTrack(MeetingUtil.getTrack(localShare).videoTrack);\n      const contentTracks = this.mediaProperties.shareTrack;\n\n      if (contentTracks) {\n        settings = contentTracks.getSettings();\n        this.mediaProperties.setMediaSettings('screen', {\n          aspectRatio: settings.aspectRatio,\n          frameRate: settings.frameRate,\n          height: settings.height,\n          width: settings.width,\n          displaySurface: settings.displaySurface,\n          cursor: settings.cursor\n        });\n        LoggerProxy.logger.log('Meeting:index#setLocalTracks --> Screen settings.', JSON.stringify(this.mediaProperties.mediaSettings.screen));\n      }\n\n      contentTracks.onended = () => this.handleShareTrackEnded(localShare);\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meeting/index',\n          function: 'setLocalShareTrack'\n        },\n        EVENT_TRIGGERS.MEDIA_READY,\n        {\n          type: EVENT_TYPES.LOCAL_SHARE,\n          stream: localShare\n        }\n      );\n    }\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalStream() {\n    const {audioTrack, videoTrack} = this.mediaProperties;\n\n    return Media.stopTracks(audioTrack)\n      .then(() => Media.stopTracks(videoTrack))\n      .then(() => {\n        const audioStopped = audioTrack && audioTrack.readyState === ENDED;\n        const videoStopped = videoTrack && videoTrack.readyState === ENDED;\n\n        if (audioStopped && videoStopped) {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'closeLocalStream'\n            },\n            EVENT_TRIGGERS.MEDIA_STOPPED, {\n              type: EVENT_TYPES.LOCAL\n            }\n          );\n        }\n        else if (audioTrack || videoTrack) {\n          LoggerProxy.logger.warn('Meeting:index#closeLocalStream --> Error: MediaStreamTrack.readyState is incorrect.');\n        }\n      });\n  }\n\n  /**\n   * Closes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @event media:stopped\n   * @public\n   * @memberof Meeting\n   */\n  closeLocalShare() {\n    const track = this.mediaProperties.shareTrack;\n\n    return Media.stopTracks(track).then(() => {\n      if (track && track.readyState === ENDED) {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'closeLocalShare'\n          },\n          EVENT_TRIGGERS.MEDIA_STOPPED, {\n            type: EVENT_TYPES.LOCAL_SHARE\n          }\n        );\n      }\n      else if (track) {\n        // Track exists but with wrong readyState\n        LoggerProxy.logger.warn(`Meeting:index#closeLocalShare --> Error: MediaStreamTrack.readyState is ${track.readyState} for localShare`);\n      }\n    });\n  }\n\n  /**\n   * Removes the local stream from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalVideoTrack() {\n    this.mediaProperties.unsetLocalVideoTrack();\n  }\n\n  /**\n   * Removes the local share from the class and emits an event to the developer\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetLocalShareTrack() {\n    this.mediaProperties.unsetLocalShareTrack();\n  }\n\n  /**\n   * sets up listner for mercury event\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  setMercuryListener() {\n    // Client will have a socket manager and handle reconnecting to mercury, when we reconnect to mercury\n    // if the meeting has active peer connections, it should try to reconnect.\n    this.webex.internal.mercury.on(ONLINE, () => {\n      LoggerProxy.logger.info('Meeting:index#setMercuryListener --> Web socket online');\n\n      // Only send restore event when it was disconnected before and for connected later\n      if (!this.hasWebsocketConnected) {\n        Metrics.postEvent({\n          event: eventType.MERCURY_CONNECTION_RESTORED,\n          meeting: this\n        });\n      }\n      this.hasWebsocketConnected = true;\n    });\n\n    this.webex.internal.mercury.on(OFFLINE, () => {\n      LoggerProxy.logger.error('Meeting:index#setMercuryListener --> Web socket offline');\n      Metrics.postEvent({\n        event: eventType.MERCURY_CONNECTION_LOST,\n        meeting: this\n      });\n      Metrics.sendOperationalMetric(\n        METRICS_OPERATIONAL_MEASURES.MERCURY_CONNECTION_FAILURE,\n        {\n          correlation_id: this.correlationId\n        }\n      );\n    });\n  }\n\n  /**\n   * Close the peer connections and remove them from the class. Triggers an event\n   * when each is closed.\n   * @returns {Promise} returns a resolved promise with an array of closed peer connections\n   * @public\n   * @memberof Meeting\n   */\n  closePeerConnections() {\n    return PeerConnectionManager.close(this.mediaProperties.peerConnection);\n  }\n\n  /**\n   * Unsets the peer connections on the class\n   * warning DO NOT CALL WITHOUT CLOSING PEER CONNECTIONS FIRST\n   * @param {PeerConnection} peerConnection\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  unsetPeerConnections() {\n    this.mediaProperties.unsetPeerConnection();\n    if (this.config.reconnection.detection) {\n      this.webex.internal.mercury.off(ONLINE);\n    }\n  }\n\n  /**\n   * Convenience method to set the correlation id for the Meeting\n   * @param {String} id correlation id to set on the class\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  setCorrelationId(id) {\n    this.correlationId = id;\n  }\n\n  /**\n   * Mute the audio for a meeting\n   * @returns {Promise} resolves the data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  muteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio || (this.audio && !this.audio.toggle)) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteAudio -->';\n\n    // First, stop sending the local audio media\n    return logRequest(this.audio.toggle({\n      mute: true,\n      self: true\n    })\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting audio`,\n      success: `${LOG_HEADER} muted audio successfully`,\n      failure: `${LOG_HEADER} muting audio failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting audio\n   * @returns {Promise} resolves data from muting audio {mute, self} or rejects if there is no audio set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteAudio() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.audio || (this.audio && !this.audio.toggle)) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteAudio -->';\n\n    // First, send the control to unmute the participant on the server\n    return logRequest(this.mute(this.members.selfId, false)\n      // Next, start sending the local audio media\n      .then(() => this.audio.toggle({\n        mute: false,\n        self: true\n      }))\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.AUDIO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.UNMUTE_AUDIO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting audio`,\n      success: `${LOG_HEADER} unmuted audio successfully`,\n      failure: `${LOG_HEADER} unmuting audio failed, `\n    });\n  }\n\n  /**\n   * Mute the video for a meeting\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  muteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video || (this.video && !this.video.toggle)) {\n      return Promise.reject(new ParameterError('no video control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#muteVideo -->';\n\n    return logRequest(this.video.toggle({\n      mute: true,\n      self: true\n    })\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.MUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} muting video`,\n      success: `${LOG_HEADER} muted video successfully`,\n      failure: `${LOG_HEADER} muting video failed, `\n    });\n  }\n\n  /**\n   * Unmute meeting video\n   * @returns {Promise} resolves data from muting video {mute, self} or rejects if there is no video set\n   * @public\n   * @memberof Meeting\n   */\n  unmuteVideo() {\n    if (!MeetingUtil.isUserInJoinedState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n\n    if (!this.mediaId) {\n      // Happens when addMedia and mute are triggered in succession\n      return Promise.reject(new NoMediaEstablishedYetError());\n    }\n\n    if (!this.video || (this.video && !this.video.toggle)) {\n      return Promise.reject(new ParameterError('no audio control associated to the meeting'));\n    }\n\n    const LOG_HEADER = 'Meeting:index#unmuteVideo -->';\n\n    return logRequest(this.video.toggle({\n      mute: false,\n      self: true\n    })\n      .then(() => {\n        Metrics.postEvent({\n          event: eventType.UNMUTED,\n          meeting: this,\n          data: {trigger: trigger.USER_INTERACTION, mediaType: mediaType.VIDEO}\n        });\n      }).catch((error) => {\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.UNMUTE_VIDEO_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        throw error;\n      }),\n    {\n      header: `${LOG_HEADER} unmuting video`,\n      success: `${LOG_HEADER} unmuted video successfully`,\n      failure: `${LOG_HEADER} unmuting video failed, `\n    });\n  }\n\n  /**\n   * Shorthand function to join AND set up media\n   * @param {Object} options - options to join with media\n   * @param {JoinOptions} [options.joinOptions] - see #join()\n   * @param {MediaDirection} options.mediaSettings - see #addMedia()\n   * @param {AudioVideo} [options.audioVideoOptions] - see #getMediaStreams()\n   * @returns {Promise} -- {join: see join(), media: see addMedia(), local: see getMediaStreams()}\n   * @public\n   * @memberof Meeting\n   * @example\n   * joinWithMedia({\n   *  joinOptions: {resourceId: 'resourceId' },\n   *  mediaSettings: {\n   *   sendAudio: true,\n   *   sendVideo: true,\n   *   sendShare: false,\n   *   receiveVideo:true,\n   *   receiveAudio: true,\n   *   receiveShare: true\n   * }\n   * audioVideoOptions: {\n   *   audio: 'audioDeviceId',\n   *   video: 'videoDeviceId'\n   * }})\n   */\n  joinWithMedia(options = {}) {\n    // TODO: add validations for parameters\n    const {mediaSettings, joinOptions, audioVideoOptions} = options;\n\n    return this.join(joinOptions)\n      .then((joinResponse) =>\n        this.getMediaStreams(mediaSettings, audioVideoOptions).then(([localStream, localShare]) =>\n          this.addMedia({\n            mediaSettings,\n            localShare,\n            localStream\n          }).then((mediaResponse) => ({\n            join: joinResponse,\n            media: mediaResponse,\n            local: [localStream, localShare]\n          }))))\n      .catch((error) => {\n        LoggerProxy.logger.error('Meeting:index#joinWithMedia --> ', error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.JOIN_WITH_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Initiates the reconnection of the media in the meeting\n   *\n   * @param {object} options\n   * @returns {Promise} resolves with {reconnect} or errors with {error}\n   * @public\n   * @memberof Meeting\n   */\n  reconnect(options) {\n    LoggerProxy.logger.log(`Meeting:index#reconnect --> attempting to reconnect meeting ${this.id}`);\n\n    if (!this.reconnectionManager || !this.reconnectionManager.reconnect) {\n      throw new ParameterError('Cannot reconnect, ReconnectionManager must first be defined.');\n    }\n\n    try {\n      LoggerProxy.logger.info('Meeting:index#reconnect --> Validating reconnect ability.');\n      this.reconnectionManager.validate();\n    }\n    catch (error) {\n      // Unable to reconnect this call\n      if (error instanceof ReconnectInProgress) {\n        LoggerProxy.logger.info('Meeting:index#reconnect --> Unable to reconnect, reconnection in progress.');\n      }\n      else {\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Unable to reconnect.', error);\n      }\n\n      return Promise.resolve();\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'reconnect'\n      },\n      EVENT_TRIGGERS.MEETING_RECONNECTION_STARTING\n    );\n\n\n    return this.reconnectionManager\n      .reconnect(options)\n      .then(() => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_SUCCESS\n        );\n        LoggerProxy.logger.log('Meeting:index#reconnect --> Meeting reconnect success');\n      })\n      .catch((error) => {\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'reconnect'\n          },\n          EVENT_TRIGGERS.MEETING_RECONNECTION_FAILURE,\n          {\n            error: new ReconnectionError('Reconnection failure event', error)\n          }\n        );\n\n        LoggerProxy.logger.error('Meeting:index#reconnect --> Meeting reconnect failed', error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MEETING_RECONNECT_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          }\n        );\n\n        this.uploadLogs({\n          file: 'meeting/index',\n          function: 'reconnect'\n        });\n\n        return Promise.reject(new ReconnectionError('Reconnection failure event', error));\n      })\n      .finally(() => {\n        this.reconnectionManager.reset();\n      });\n  }\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {JoinOptions} options A configurable options object for joining a meeting\n   * @returns {Promise} the join response\n   * @public\n   * @memberof Meeting\n   * Scenario A: Joining own claimed personal meeting room\n   * Scenario B: Joining other's claimed personal meeting room, do pass pin (if desired to join as host, or nullify), do pass moderator\n   * Scenario C: Joining an unclaimed personal meeting room, -do not- pass pin or moderator on first try, -do- pass pin and moderator\n   *             if joining as host on second loop, pass pin and pass moderator if joining as guest on second loop\n   * Scenario D: Joining any other way (sip, pstn, conversationUrl, link just need to specify resourceId)\n   */\n  join(options = {}) {\n    // If a join request is being processed, refer to the deferred promise.\n    if (this.deferJoin) {\n      return this.deferJoin;\n    }\n\n    // Scope-up the resolve/reject methods for handling within join().\n    let joinFailed;\n    let joinSuccess;\n\n    // Create a deferred promise for a consistent resolve value from utils.\n    // This also prevents redundant API calls.\n    this.deferJoin = new Promise((resolve, reject) => {\n      joinFailed = reject;\n      joinSuccess = resolve;\n    });\n\n    if (options.rejoin) {\n      LoggerProxy.logger.log(`Meeting:index#join --> Generating a new correlation id for meeting ${this.id}`);\n      LoggerProxy.logger.log(`Meeting:index#join --> Previous correlation id ${this.correlationId}`);\n      this.setCorrelationId(uuid.v4());\n      LoggerProxy.logger.log(`Meeting:index#join --> New correlation id ${this.correlationId}`);\n      this.meetingFiniteStateMachine.reset();\n    }\n\n    Metrics.postEvent({\n      event: eventType.CALL_INITIATED,\n      meeting: this,\n      data: {trigger: trigger.USER_INTERACTION}\n    });\n\n    Metrics.sendOperationalMetric(\n      METRICS_OPERATIONAL_MEASURES.JOIN_ATTEMPT,\n      {\n        correlation_id: this.correlationId\n      }\n    );\n\n    LoggerProxy.logger.log('Meeting:index#join --> Joining a meeting');\n\n    if (this.meetingFiniteStateMachine.state === MEETING_STATE_MACHINE.STATES.ENDED) {\n      this.meetingFiniteStateMachine.reset();\n    }\n    if (this.meetingFiniteStateMachine.state !== MEETING_STATE_MACHINE.STATES.RINGING) {\n      this.meetingFiniteStateMachine.ring(_JOIN_);\n    }\n\n    // TODO: does this really need to be here?\n    if (options.resourceId && this.destination && options.resourceId === this.destination) {\n      this.wirelessShare = true;\n    }\n\n    if (options.meetingQuality) {\n      if (typeof options.meetingQuality === 'string') {\n        if (!QUALITY_LEVELS[options.meetingQuality]) {\n          const errorMessage = `Meeting:index#join --> ${options.meetingQuality} not defined`;\n          const error = new Error(errorMessage);\n\n          LoggerProxy.logger.error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(error);\n        }\n\n        this.mediaProperties.setLocalQualityLevel(options.meetingQuality);\n        this.mediaProperties.setRemoteQualityLevel(options.meetingQuality);\n      }\n\n      if (typeof options.meetingQuality === 'object') {\n        if (\n          !QUALITY_LEVELS[options.meetingQuality.local] &&\n          !QUALITY_LEVELS[options.meetingQuality.remote]\n        ) {\n          const errorMessage = `Meeting:index#join --> ${\n            options.meetingQuality.local || options.meetingQuality.remote\n          } not defined`;\n\n          LoggerProxy.logger.error(errorMessage);\n\n          const error = new Error(errorMessage);\n\n          joinFailed(error);\n          this.deferJoin = undefined;\n\n          return Promise.reject(new Error(errorMessage));\n        }\n\n        if (options.meetingQuality.local) {\n          this.mediaProperties.setLocalQualityLevel(options.meetingQuality.local);\n        }\n        if (options.meetingQuality.remote) {\n          this.mediaProperties.setRemoteQualityLevel(options.meetingQuality.remote);\n        }\n      }\n    }\n\n    return MeetingUtil.joinMeetingOptions(this, options).then((join) => {\n      this.meetingFiniteStateMachine.join();\n      LoggerProxy.logger.log('Meeting:index#join --> Success');\n\n      return join;\n    })\n      .then((join) => {\n        joinSuccess(join);\n        this.deferJoin = undefined;\n\n        return join;\n      })\n      .catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#join --> Failed', error);\n\n        // TODO:  change this to error codes and pre defined dictionary\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.JOIN_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            reason: error.error?.message,\n            stack: error.stack\n          }\n        );\n\n        // Upload logs on join Failure\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'join'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        joinFailed(error);\n        this.deferJoin = undefined;\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Moves the call to the specified resourceId\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveTo(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n\n    Metrics.mediaCapabilities({\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n    Metrics.moveMedia({meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this, {resourceId, moveToResource: true}).then(() => {\n      this.meetingFiniteStateMachine.join();\n\n      return this.updateMedia({\n        mediaSettings: {\n          sendVideo: false, receiveVideo: false, sendAudio: false, receiveAudio: false, sendShare: false, receiveShare: false\n        }\n      }).then(() => Promise.resolve(this));\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Moves the call from the specified resourceId, back to computer\n   * @param {String} resourceId\n   * @returns {Promise} once the move has been completed\n   * @public\n   * @memberof Meeting\n   */\n  moveFrom(resourceId) {\n    if (!resourceId) {\n      throw new ParameterError('Cannot move call without a resourceId.');\n    }\n    const oldCorrelationId = this.correlationId;\n\n    this.id = uuid.v4();\n\n    this.webex.meetings.meetingCollection.set(this);\n\n    Metrics.mediaCapabilities({\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: true,\n            share: true,\n            share_audio: true,\n            video: true,\n            whiteboard: true\n          },\n          tx: {\n            audio: true,\n            share: true,\n            share_audio: true,\n            video: true,\n            whiteboard: true\n          }\n        }\n      }\n    });\n    Metrics.moveMedia({meeting: this});\n\n    return MeetingUtil.joinMeetingOptions(this).then((join) => this.getMediaStreams({sendAudio: true, sendVideo: true, sendShare: false})\n      .then(([localStream, localShare]) =>\n        this.updateMedia({\n          mediaSettings: {\n            sendAudio: true, receiveAudio: true, sendVideo: true, receiveVideo: true, sendShare: false, receiveShare: false\n          },\n          localStream,\n          localShare\n        })\n          .then(() => Promise.resolve(join)))\n      .then(() => MeetingUtil.leaveMeeting(this, {resourceId, correlationId: oldCorrelationId, moveMeeting: true})))\n      .then(() => {\n        this.webex.meetings.meetingCollection.delete(this.id);\n\n        return Promise.resolve();\n      });\n  }\n\n  /**\n   * Get local media streams based on options passed\n   * @param {MediaDirection} mediaDirection A configurable options object for joining a meeting\n   * @param {AudioVideo} [audioVideo] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @param {SharePreferences} [sharePreferences] audio/video object to set audioinput and videoinput devices, see #Media.getUserMedia\n   * @returns {Promise} see #Media.getUserMedia\n   * @public\n   * @todo should be static, or moved so can be called outside of a meeting\n   * @memberof Meeting\n   */\n  getMediaStreams = (\n    mediaDirection,\n    // This return an OBJECT {video: {height, widght}}\n    audioVideo = VIDEO_RESOLUTIONS[this.mediaProperties.localQualityLevel],\n    sharePreferences\n  ) => {\n    if (\n      mediaDirection &&\n      (\n        mediaDirection.sendAudio ||\n        mediaDirection.sendVideo ||\n        mediaDirection.sendShare\n      )\n    ) {\n      if (mediaDirection &&\n        (\n          mediaDirection.sendAudio &&\n          mediaDirection.sendVideo &&\n          mediaDirection.sendShare\n        ) &&\n        isBrowser('safari')\n      ) {\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Setting `sendShare` to FALSE, due to complications with Safari');\n\n        mediaDirection.sendShare = false;\n\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Enabling `sendShare` along with `sendAudio` & `sendVideo`, on Safari, causes a failure while setting up a screen share at the same time as the camera+mic stream');\n        LoggerProxy.logger.warn('Meeting:index#getMediaStreams --> Please use `meeting.shareScreen()` to manually start the screen share after successfully joining the meeting');\n      }\n\n      // extract deviceId if exists otherwise default to null.\n      const {deviceId: preferredVideoDevice} = (audioVideo && audioVideo.video || {deviceId: null});\n      const lastVideoDeviceId = this.mediaProperties.getVideoDeviceId();\n\n      if (preferredVideoDevice) {\n        // Store new preferred video input device\n        this.mediaProperties.setVideoDeviceId(preferredVideoDevice);\n      }\n      else if (lastVideoDeviceId) {\n        // no new video preference specified so use last stored value,\n        // works with empty object {} or media constraint.\n        // eslint-disable-next-line no-param-reassign\n        audioVideo = {\n          ...audioVideo,\n          video: {\n            ...audioVideo.video,\n            deviceId: lastVideoDeviceId\n          }\n        };\n      }\n\n      return Media.getSupportedDevice({\n        sendAudio: mediaDirection.sendAudio,\n        sendVideo: mediaDirection.sendVideo\n      })\n        .catch((error) => Promise.reject(\n          new MediaError('Given constraints do not match permission set for either camera or microphone', error)\n        ))\n        .then((devicePermissions) =>\n          Media.getUserMedia(\n            {\n              ...mediaDirection,\n              sendAudio: (mediaDirection.sendAudio === devicePermissions.sendAudio),\n              sendVideo: (mediaDirection.sendVideo === devicePermissions.sendVideo),\n              isSharing: this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE\n            },\n            audioVideo,\n            sharePreferences,\n            this.config\n          )\n            .catch((error) => {\n              // Whenever there is a failure when trying to access a user's device\n              // report it as an operational metric\n              // This gives visibility into common errors and can help\n              // with further troubleshooting\n              const metricName = METRICS_OPERATIONAL_MEASURES.GET_USER_MEDIA_FAILURE;\n              const data = {\n                correlation_id: this.correlationId,\n                locus_id: this.locusUrl.split('/').pop(),\n                reason: error.message,\n                stack: error.stack\n              };\n              const metadata = {\n                type: error.name\n              };\n\n              Metrics.sendOperationalMetric(metricName, data, metadata);\n              throw new MediaError('Unable to retrieve media streams', error);\n            }));\n    }\n\n    return Promise.reject(\n      new MediaError('At least one of the mediaDirection value should be true')\n    );\n  };\n\n\n  /**\n   * Checks if the machine has at least one audio or video device\n   * @param {Object} options\n   * @param {Boolean} options.sendAudio\n   * @param {Boolean} options.sendVideo\n   * @returns {Object}\n   * @memberof Meetings\n   */\n  getSupportedDevices = ({sendAudio = true, sendVideo = true}) => Media.getSupportedDevice({sendAudio, sendVideo});\n\n  /**\n   * Get the devices from the Media module\n   * @returns {Promise} resolves to an array of DeviceInfo\n   * @memberof Meetings\n   */\n  getDevices = () => Media.getDevices();\n\n  /**\n   * Specify joining via audio (option: pstn), video, screenshare\n   * @param {Object} options A configurable options object for joining a meeting\n   * @param {Object} options.resourceId pass the deviceId\n   * @param {MediaDirection} options.mediaSettings pass media options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  addMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#addMedia -->';\n\n    if (this.meetingState !== FULL_STATE.ACTIVE) {\n      return Promise.reject(new MeetingNotActiveError());\n    }\n\n    if (MeetingUtil.isUserInLeftState(this.locusInfo)) {\n      return Promise.reject(new UserNotJoinedError());\n    }\n    // If the user is unjoined or guest waiting in lobby dont allow the user to addMedia\n    if (this.guest && MeetingUtil.isUserInIdleState(this.locusInfo) && !this.wirelessShare) {\n      return Promise.reject(new UserInLobbyError());\n    }\n\n    const {localStream, localShare, mediaSettings} = options;\n\n    LoggerProxy.logger.info(`${LOG_HEADER} Adding Media.`);\n\n    Metrics.postEvent({\n      event: eventType.MEDIA_CAPABILITIES,\n      meeting: this,\n      data: {\n        mediaCapabilities: {\n          rx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          },\n          tx: {\n            audio: false,\n            share: false,\n            share_audio: false,\n            video: false,\n            whiteboard: false\n          }\n        }\n      }\n    });\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => {\n        if (!this.mediaProperties.peerConnection) {\n          this.mediaProperties.setMediaPeerConnection(MediaUtil.createPeerConnection());\n        }\n        this.setMercuryListener();\n        PeerConnectionManager.setPeerConnectionEvents(this);\n\n        return this.preMedia(localStream, localShare, mediaSettings);\n      })\n      .then(() => Media.attachMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection Received from attachMedia `);\n\n          this.setRemoteStream(peerConnection);\n          MeetingUtil.startInternalStats(this);\n\n          if (this.config.metrics.autoSendMQA) {\n            this.startMediaQualityMetrics();\n          }\n\n          if (this.config.stats.enableStatsAnalyzer) {\n            this.statsAnalyzer = new StatsAnalyzer(this.config.stats);\n            this.statsAnalyzer.on(EVENT_TRIGGERS.MEDIA_QUALITY, (options) => {\n              // TODO:  might have to send the same event to the developer\n              // Add ip address info if geo hint is present\n              options.data.intervalMetadata.peerReflexiveIP = this.webex.meetings.geoHintInfo?.clientAddress || options.data.intervalMetadata.peerReflexiveIP || MQA_STATS.DEFAULT_IP;\n              Metrics.postEvent({event: eventType.MEDIA_QUALITY, meeting: this, data: {intervalData: options.data, networkType: options.networkType}});\n            });\n            this.statsAnalyzer.on(EVENT_TRIGGERS.MEETING_HIGH_PACKETLOSS, (res) => {\n              if (res.mediaType === VIDEO) {\n                if (this.config.stats.autoDowngradeEnabled && this.canUpdateMedia()) {\n                  LoggerProxy.logger.log(`${LOG_HEADER} High Packet Loss Detected, Adjusting Local Video Quality`);\n                  if (this.mediaProperties.localQualityLevel === QUALITY_LEVELS.HIGH) {\n                    this.setLocalVideoQuality(QUALITY_LEVELS.MEDIUM);\n                  }\n                  else if (this.mediaProperties.localQualityLevel === QUALITY_LEVELS.MEDIUM) {\n                    this.setLocalVideoQuality(QUALITY_LEVELS.LOW);\n                  }\n                }\n                Trigger.trigger(\n                  this,\n                  {\n                    file: 'meeting/index',\n                    function: 'addMedia'\n                  },\n                  EVENT_TRIGGERS.MEETING_HIGH_PACKETLOSS,\n                  {\n                    mediaType: res.mediaType,\n                    packetLossRatio: res.packetLossRatio\n                  }\n                );\n              }\n            });\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error adding media , setting up peerconnection, `, error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.ADD_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() => new Promise((resolve, reject) => {\n          let timerCount = 0;\n\n          // eslint-disable-next-line func-names\n          // eslint-disable-next-line prefer-arrow-callback\n          if (this.type === _CALL_) {\n            resolve();\n          }\n          const joiningTimer = setInterval(() => {\n            timerCount += 1;\n            if (this.meetingState === FULL_STATE.ACTIVE) {\n              clearInterval(joiningTimer);\n              resolve();\n            }\n\n            if (timerCount === 4) {\n              clearInterval(joiningTimer);\n              reject(new Error('Meeting is still not active '));\n            }\n          }, 1000);\n        }))\n        .then(() => logRequest(this.roap\n          .sendRoapMediaRequest({\n            sdp: this.mediaProperties.peerConnection.sdp,\n            roapSeq: this.roapSeq,\n            meeting: this // or can pass meeting ID\n          }), {\n          header: `${LOG_HEADER} Send Roap Media Request.`,\n          success: `${LOG_HEADER} Successfully send roap media request`,\n          failure: `${LOG_HEADER} Error joining the call on send roap media request, `\n        }))\n        .then(() => {\n          const {peerConnection} = this.mediaProperties;\n\n          return new Promise((resolve, reject) => {\n            if (peerConnection.connectionState === CONNECTION_STATE.CONNECTED) {\n              LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n\n              resolve(peerConnection);\n\n              return;\n            }\n            // Check if Peer Connection is STABLE (connected)\n            const stabilityTimeout = setTimeout(() => {\n              if (peerConnection.connectionState !== CONNECTION_STATE.CONNECTED) {\n                // TODO: Fix this after the error code pr goes in\n                reject(createMeetingsError(30202, 'Meeting connection failed'));\n              }\n              else {\n                LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED`);\n                resolve(peerConnection);\n              }\n            }, PC_BAIL_TIMEOUT);\n\n            this.once(EVENT_TRIGGERS.MEDIA_READY, () => {\n              LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection CONNECTED, clearing stability timer.`);\n              clearTimeout(stabilityTimeout);\n              resolve(peerConnection);\n            });\n          });\n        })\n        .then(() => {\n          if (mediaSettings && mediaSettings.sendShare && localShare) {\n            if (this.state === MEETING_STATE.STATES.JOINED) {\n              return this.share();\n            }\n\n            // When the self state changes to JOINED then request the floor\n            this.floorGrantPending = true;\n          }\n\n          return Promise.resolve();\n        }))\n      .catch((error) => {\n        LoggerProxy.logger.error(`${LOG_HEADER} Error adding media failed to initiate PC and send request, `, error);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.ADD_MEDIA_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code\n          }\n        );\n\n        // Upload logs on error while adding media\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'addMedia'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // If addMedia failes for not establishing connection then\n        // leave the meeting with reson connection failed as meeting anyways will end\n        // and cannot be connected unless network condition is checked for firewall\n        if (error.code === InvalidSdpError.CODE) {\n          this.leave({reason: MEETING_REMOVED_REASON.MEETING_CONNECTION_FAILED});\n        }\n\n        throw error;\n      });\n  }\n\n  /**\n   * Informs if the peer connection is in a state that can be updated with updateMedia (audio/video/share)\n   * @returns {Boolean}\n   */\n  canUpdateMedia() {\n    return this.mediaProperties.peerConnection.signalingState === SDP.STABLE;\n  }\n\n  /**\n   * A confluence of updateAudio, updateVideo, and updateShare\n   * this function re-establishes all of the media streams with new options\n   * @param {Object} options\n   * @param {MediaStream} options.localStream\n   * @param {MediaStream} options.localShare\n   * @param {MediaDirection} options.mediaSettings\n   * @returns {Promise}\n   * @todo fix setRemoteStream for updateMedia\n   * @public\n   * @memberof Meeting\n   */\n  updateMedia(options = {}) {\n    const LOG_HEADER = 'Meeting:index#updateMedia -->';\n\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {localStream, localShare, mediaSettings} = options;\n\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    return MeetingUtil.validateOptions(options)\n      .then(() => this.preMedia(localStream, localShare, mediaSettings))\n      .then(() => Media.updateMedia(this.mediaProperties, {\n        meetingId: this.id,\n        remoteQualityLevel: this.mediaProperties.remoteQualityLevel,\n        enableRtx: this.config.enableRtx\n      })\n        .then((peerConnection) => {\n          LoggerProxy.logger.info(`${LOG_HEADER} PeerConnection received from updateMedia, ${peerConnection}`);\n          this.setRemoteStream(peerConnection);\n          if (mediaSettings.receiveShare || localShare) {\n            PeerConnectionManager.setContentSlides(peerConnection);\n          }\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error(`${LOG_HEADER} Error updatedMedia, `, error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.UPDATE_MEDIA_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          throw error;\n        })\n        .then(() =>\n          logRequest(this.roap\n            .sendRoapMediaRequest({\n              sdp: this.mediaProperties.peerConnection.sdp,\n              roapSeq: this.roapSeq,\n              meeting: this // or can pass meeting ID\n            }),\n          {\n            header: `${LOG_HEADER} sendRoapMediaRequest being sent`,\n            success: `${LOG_HEADER} sendRoadMediaRequest successful`,\n            failure: `${LOG_HEADER} Error updateMedia on send roap media request, `\n          }))\n        .then(() => this.checkForStopShare(mediaSettings.sendShare, previousSendShareStatus))\n        .then((startShare) => {\n          // This is a special case if we do an /floor grant followed by /media\n          // we actually get a OFFER from the server and a GLAR condition happens\n          if (startShare) {\n            // We are assuming that the clients are connected when doing an update\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }));\n  }\n\n  /**\n   * Update the main audio streams with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendAudio\n   * @param {boolean} options.receiveAudio\n   * @param {MediaStream} options.stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateAudio(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendAudio, receiveAudio, stream} = options;\n    const {audioTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).audioTrack;\n\n    if (typeof sendAudio !== 'boolean' || typeof receiveAudio !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendAudio, localStream: stream})\n      .then(() => {\n        let previousMediaDirection = {};\n\n        if (this.mediaProperties.mediaDirection) {\n          previousMediaDirection = {\n            sendTrack: this.mediaProperties.mediaDirection.sendAudio,\n            receiveTrack: this.mediaProperties.mediaDirection.receiveAudio\n          };\n        }\n        else {\n          this.mediaProperties.mediaDirection = {};\n        }\n\n        return MeetingUtil.updateTransceiver(\n          {\n            type: 'audio',\n            sendTrack: options.sendAudio,\n            receiveTrack: options.receiveAudio,\n            track,\n            transceiver: audioTransceiver,\n            peerConnection: this.mediaProperties.peerConnection,\n            previousMediaDirection\n          },\n          {\n            mediaProperties: this.mediaProperties,\n            roapSeq: this.roapSeq,\n            meeting: this,\n            id: this.id\n          }\n        );\n      })\n      .then(() => {\n        this.setLocalTracks(stream);\n        this.mediaProperties.mediaDirection.sendAudio = sendAudio;\n        this.mediaProperties.mediaDirection.receiveAudio = receiveAudio;\n\n        // audio state could be undefined if you have not sent audio before\n        this.audio = this.audio || AudioStateMachine.create(this.mediaProperties.mediaDirection, this);\n      });\n  }\n\n  /**\n   * Update the main video streams with new parameters\n   * @param {Object} options\n   * @param {boolean} options.sendVideo\n   * @param {boolean} options.receiveVideo\n   * @param {MediaStream} options.stream\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateVideo(options) {\n    if (!this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendVideo, receiveVideo, stream} = options;\n    const {videoTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendVideo !== 'boolean' || typeof receiveVideo !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendVideo and receiveVideo parameter'));\n    }\n\n    return MeetingUtil.validateOptions({sendVideo, localStream: stream})\n      .then(() => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: options.sendVideo,\n        receiveTrack: options.receiveVideo,\n        track,\n        transceiver: videoTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendVideo,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveVideo\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        roapSeq: this.roapSeq,\n        meeting: this,\n        id: this.id\n      }))\n      .then(() => {\n        this.setLocalTracks(stream);\n        this.mediaProperties.mediaDirection.sendVideo = sendVideo;\n        this.mediaProperties.mediaDirection.receiveVideo = receiveVideo;\n\n        // video state could be undefined if you have not sent video before\n        this.video = this.video || VideoStateMachine.create(this.mediaProperties.mediaDirection, this);\n      });\n  }\n\n  /**\n   * Internal function when stopping a share stream, cleanup\n   * @param {boolean} sendShare\n   * @param {boolean} previousShareStatus\n   * @returns {Promise}\n   * @private\n   * @memberof Meeting\n   */\n  checkForStopShare(sendShare, previousShareStatus) {\n    if (sendShare && !previousShareStatus) {\n      // When user starts sharing\n      return Promise.resolve(true);\n    }\n\n    if (!sendShare && previousShareStatus) {\n      // When user stops sharing\n      return this.stopFloorRequest()\n        .then(() => Promise.resolve(false));\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Update the share streams, can be used to start sharing\n   * @param {Object} options\n   * @param {boolean} options.sendShare\n   * @param {boolean} options.receiveShare\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  updateShare(options) {\n    if (!options.skipSignalingCheck && !this.canUpdateMedia()) {\n      return Promise.reject(new MediaError('The peer connection is currently negotiation an offer. Please wait for a few seconds and try again.'));\n    }\n    const {sendShare, receiveShare, stream} = options;\n    const {shareTransceiver} = this.mediaProperties.peerConnection;\n    const track = MeetingUtil.getTrack(stream).videoTrack;\n\n    if (typeof sendShare !== 'boolean' || typeof receiveShare !== 'boolean') {\n      return Promise.reject(new ParameterError('Pass sendShare and receiveShare parameter'));\n    }\n    const previousSendShareStatus = this.mediaProperties.mediaDirection.sendShare;\n\n    this.setLocalShareTrack(stream);\n\n    return MeetingUtil.validateOptions({sendShare, localShare: stream})\n      .then(() => this.checkForStopShare(sendShare, previousSendShareStatus))\n      .then((startShare) => MeetingUtil.updateTransceiver({\n        type: 'video',\n        sendTrack: sendShare,\n        receiveTrack: receiveShare,\n        track,\n        transceiver: shareTransceiver,\n        peerConnection: this.mediaProperties.peerConnection,\n        previousMediaDirection: {\n          sendTrack: this.mediaProperties.mediaDirection.sendShare,\n          receiveTrack: this.mediaProperties.mediaDirection.receiveShare\n        }\n      },\n      {\n        mediaProperties: this.mediaProperties,\n        roapSeq: this.roapSeq,\n        meeting: this,\n        id: this.id\n      })\n        .then(() => {\n          if (startShare) {\n            return this.share();\n          }\n\n          return Promise.resolve();\n        }))\n      .then(() => {\n        this.mediaProperties.mediaDirection.sendShare = sendShare;\n        this.mediaProperties.mediaDirection.receiveShare = receiveShare;\n      })\n      .catch((error) => {\n        this.unsetLocalShareTrack(stream);\n        throw error;\n      })\n      .finally(() => {\n        const delay = 1e3;\n        // Check to see if share was stopped natively before onended was assigned.\n        const sharingModeIsActive = this.mediaProperties.peerConnection.shareTransceiver.direction === SENDRECV;\n        const isSharingOutOfSync = sharingModeIsActive && !this.isLocalShareLive;\n\n        if (isSharingOutOfSync) {\n          // Adding a delay to avoid a 409 from server\n          // which results in user still appearing as if sharing.\n          // Also delay give time for changes to peerConnection.\n          setTimeout(\n            () => this.handleShareTrackEnded(stream),\n            delay\n          );\n        }\n      });\n  }\n\n  /**\n   * Do all the attach media pre set up before executing the actual attach\n   * @param {MediaStream} localStream\n   * @param {MediaStream} localShare\n   * @param {MediaDirection} mediaSettings\n   * @returns {undefined}\n   * @private\n   * @memberof Meeting\n   */\n  preMedia(localStream, localShare, mediaSettings) {\n    // eslint-disable-next-line no-warning-comments\n    // TODO wire into default config. There's currently an issue with the stateless plugin or how we register\n    this.mediaProperties.setMediaDirection(Object.assign(this.config.mediaSettings, mediaSettings));\n    // add a setup a function move the create and setup media in future\n    // TODO: delete old audio and video if stale\n    this.audio = this.audio || AudioStateMachine.create(this.mediaProperties.mediaDirection, this);\n    this.video = this.video || VideoStateMachine.create(this.mediaProperties.mediaDirection, this);\n    // Validation is already done in addMedia so no need to check if the lenght is greater then 0\n    this.setLocalTracks(localStream);\n    this.setLocalShareTrack(localShare);\n  }\n\n  /**\n   * Acknowledge the meeting, outgoing or incoming\n   * @param {String} type\n   * @returns {Promise} resolve {message, ringing, response}\n   * @public\n   * @memberof Meeting\n   */\n  acknowledge(type) {\n    if (!type) {\n      return Promise.reject(new ParameterError('Type must be set to acknowledge the meeting.'));\n    }\n    if (type === _INCOMING_) {\n      return this.meetingRequest\n        .acknowledgeMeeting({\n          locusUrl: this.locusUrl,\n          deviceUrl: this.deviceUrl,\n          correlationId: this.correlationId\n        })\n        .then((response) => Promise.resolve(response))\n        .then((response) => {\n          this.meetingFiniteStateMachine.ring(type);\n          Metrics.postEvent({event: eventType.ALERT_DISPLAYED, meeting: this});\n\n          return Promise.resolve({\n            response\n          });\n        });\n    }\n\n    // TODO: outside of 1:1 incoming, and all outgoing calls\n    return Promise.resolve({\n      message: 'noop'\n    });\n  }\n\n  /**\n   * Decline this meeting\n   * @param {String} reason\n   * @returns {undefined}\n   * @public\n   * @memberof Meeting\n   */\n  decline(reason) {\n    return MeetingUtil.declineMeeting(this, reason).then((decline) => {\n      this.meetingFiniteStateMachine.decline();\n\n      return Promise.resolve(decline);\n    }).catch((error) => {\n      this.meetingFiniteStateMachine.fail(error);\n\n      return Promise.reject(error);\n    });\n  }\n\n  /**\n   * Leave the current meeting\n   * @param {Object} options leave options\n   * @param {String} options.resourceId the device with which to leave from, empty if just the computer\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  leave(options = {}) {\n    Metrics.postEvent({event: eventType.LEAVE, meeting: this, data: {trigger: trigger.USER_INTERACTION, canProceed: false}});\n    const leaveReason = options.reason || MEETING_REMOVED_REASON.CLIENT_LEAVE_REQUEST;\n\n    LoggerProxy.logger.log('Meeting:index#leave --> Leaving a meeting');\n\n    return MeetingUtil.leaveMeeting(this, options)\n      .then((leave) => {\n        this.meetingFiniteStateMachine.leave();\n        this.audio = null;\n        this.video = null;\n        this.isSharing = false;\n        if (this.shareStatus === SHARE_STATUS.LOCAL_SHARE_ACTIVE) {\n          this.shareStatus = SHARE_STATUS.NO_SHARE;\n        }\n\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n\n        // TODO: more testing before we remove this code, we are not sure the scenarios for destroy here\n        if (this.wirelessShare || this.guest) {\n          // If screen sharing clean the meeting object\n          Trigger.trigger(\n            this,\n            {\n              file: 'meeting/index',\n              function: 'leave'\n            },\n            EVENTS.DESTROY_MEETING,\n            {\n              reason: options.reason,\n              meetingId: this.id\n            }\n          );\n        }\n        LoggerProxy.logger.log('Meeting:index#leave --> LEAVE REASON ', leaveReason);\n\n        return leave;\n      }).catch((error) => {\n        this.meetingFiniteStateMachine.fail(error);\n        LoggerProxy.logger.error('Meeting:index#leave --> Failed to leave ', error);\n        // upload logs on leave irrespective of meeting delete\n        Trigger.trigger(\n          this,\n          {\n            file: 'meeting/index',\n            function: 'leave'\n          },\n          EVENTS.REQUEST_UPLOAD_LOGS,\n          this\n        );\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.MEETING_LEAVE_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack,\n            code: error.code\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Start sharing content with server\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  share() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && (this.shareStatus !== SHARE_STATUS.LOCAL_SHARE_ACTIVE)) {\n      Metrics.postEvent({event: eventType.SHARE_INITIATED, meeting: this});\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.GRANTED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .then(() => {\n          this.isSharing = true;\n\n          return Promise.resolve();\n        })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#share --> Error ', error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.MEETING_SHARE_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot share without content.'));\n  }\n\n  /**\n   * Stops the screen share\n   * @returns {Promise} see #updateShare\n   * @public\n   * @memberof Meeting\n   */\n  // Internal only, temporarily allows optional params\n  // eslint-disable-next-line valid-jsdoc\n  stopShare(options = {}) {\n    return this.updateShare({\n      sendShare: false,\n      receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n      ...options\n    });\n  }\n\n  /**\n   * sends stops floor request\n   * @returns {Promise} see #meetingRequest.changeMeetingFloor\n   * @private\n   * @memberof Meeting\n   */\n  stopFloorRequest() {\n    const content = this.locusInfo.mediaShares.find((element) => element.name === CONTENT);\n\n    if (content && (this.mediaProperties.mediaDirection.sendShare)) {\n      Metrics.postEvent({event: eventType.SHARE_STOPPED, meeting: this});\n      Media.stopTracks(this.mediaProperties.shareTrack);\n\n      if (this.contentId !== this.selfId) {\n        // remote participant started sharing and caused our sharing to stop, we don't want to send any floor action request in that case\n        this.isSharing = false;\n\n        return Promise.resolve();\n      }\n\n      return this.meetingRequest.changeMeetingFloor({\n        disposition: FLOOR_ACTION.RELEASED,\n        personUrl: this.locusInfo.self.url,\n        deviceUrl: this.deviceUrl,\n        uri: content.url,\n        resourceUrl: this.resourceUrl\n      })\n        .catch((error) => {\n          LoggerProxy.logger.error('Meeting:index#stopFloorRequest --> Error ', error);\n\n          Metrics.sendOperationalMetric(\n            METRICS_OPERATIONAL_MEASURES.STOP_FLOOR_REQUEST_FAILURE,\n            {\n              correlation_id: this.correlationId,\n              locus_id: this.locusUrl.split('/').pop(),\n              reason: error.message,\n              stack: error.stack\n            }\n          );\n\n          return Promise.reject(error);\n        })\n        .finally(() => {\n          this.isSharing = false;\n        });\n    }\n\n    return Promise.reject(new ParameterError('Cannot stop share without content'));\n  }\n\n  /**\n   * Intiate a recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  startRecording() {\n    return MeetingUtil.startRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * End the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  stopRecording() {\n    return MeetingUtil.stopRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Pauses the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  pauseRecording() {\n    return MeetingUtil.pauseRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Resumes the recording of this meeting\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  resumeRecording() {\n    return MeetingUtil.resumeRecording(this.meetingRequest, this.locusUrl, this.locusInfo);\n  }\n\n  /**\n   * Locks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  lockMeeting() {\n    return MeetingUtil.lockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Unlocks the current meeting if possible\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  unlockMeeting() {\n    return MeetingUtil.unlockMeeting(this.inMeetingActions, this.meetingRequest, this.locusUrl);\n  }\n\n  /**\n   * Sends DTMF tones to the current meeting\n   * @param {String} tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  sendDTMF(tones) {\n    const reject = (message) => {\n      LoggerProxy.logger.error(message);\n\n      return Promise.reject(new Error(message));\n    };\n\n    if (this.locusInfo && this.locusInfo.self) {\n      if (this.locusInfo.self.enableDTMF) {\n        return this.meetingRequest\n          .sendDTMF({\n            locusUrl: this.locusInfo.self.url,\n            deviceUrl: this.deviceUrl,\n            tones\n          });\n      }\n\n      return reject('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have DTMF enabled');\n    }\n\n    return reject('Meeting:index#sendDTMF --> cannot send DTMF, meeting does not have a connection to the \"locus\" call control service. Have you joined?');\n  }\n\n  /**\n   * Sends request to change layout type for the current meeting for the specific participant/device only\n   * @param {String} layoutType a layout type that should be available in meeting constants LAYOUT_TYPES\n   * @returns {Promise}\n   * @public\n   * @memberof Meeting\n   */\n  changeVideoLayout(layoutType) {\n    const reject = (message) => {\n      LoggerProxy.logger.error(message);\n\n      return Promise.reject(new Error(message));\n    };\n\n    const {mediaDirection, remoteVideoTrack} = this.mediaProperties;\n\n    // TODO: We need a real time value for Audio, Video and Share send indicator\n    if (mediaDirection.receiveVideo === true && remoteVideoTrack) {\n      if (LAYOUT_TYPES.includes(layoutType)) {\n        return this.meetingRequest\n          .changeVideoLayout({\n            locusUrl: this.locusInfo.self.url,\n            deviceUrl: this.deviceUrl,\n            layoutType\n          })\n          .then((response) => {\n            if (response && response.body && response.body.locus) {\n              this.locusInfo.onFullLocus(response.body.locus);\n            }\n          });\n      }\n\n      return reject('Meeting:index#changeVideoLayout --> cannot change video layout, invalid layoutType recieved.');\n    }\n\n    return reject('Meeting:index#changeVideoLayout --> cannot change video layout, you are not recieving any video/share stream');\n  }\n\n  /**\n   * Sets the quality of the local video stream\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setLocalVideoQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setLocalVideoQuality --> Setting quality to ${level}`);\n\n    if (!VIDEO_RESOLUTIONS[level]) {\n      const errorMessage = `Meeting:index#setLocalVideoQuality --> ${level} not defined`;\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    if (!this.mediaProperties.mediaDirection.sendVideo) {\n      const errorMessage = 'Meeting:index#setLocalVideoQuality --> unable to change video quality, sendVideo is disabled';\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.localQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setLocalQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setLocalQualityLevel(level);\n\n    const mediaDirection = {\n      sendAudio: this.mediaProperties.mediaDirection.sendAudio,\n      sendVideo: this.mediaProperties.mediaDirection.sendVideo,\n      sendShare: this.mediaProperties.mediaDirection.sendShare\n    };\n\n    return this.getMediaStreams(mediaDirection, VIDEO_RESOLUTIONS[level])\n      .then(([localStream]) =>\n        this.updateVideo({\n          sendVideo: true,\n          receiveVideo: true,\n          stream: localStream\n        }));\n  }\n\n  /**\n   * Sets the quality level of the remote incoming media\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setRemoteQualityLevel(level) {\n    LoggerProxy.logger.log(`Meeting:index#setRemoteQualityLevel --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      const errorMessage = `Meeting:index#setRemoteQualityLevel --> ${level} not defined`;\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    if (!this.mediaProperties.mediaDirection.receiveAudio && !this.mediaProperties.mediaDirection.receiveVideo) {\n      const errorMessage = 'Meeting:index#setRemoteQualityLevel --> unable to change remote quality, receiveVideo and receiveAudio is disabled';\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    // If level is already the same, don't do anything\n    if (level === this.mediaProperties.remoteQualityLevel) {\n      LoggerProxy.logger.warn(`Meeting:index#setRemoteQualityLevel --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Set the quality level in properties\n    this.mediaProperties.setRemoteQualityLevel(level);\n\n    return this.updateMedia({mediaSettings: this.mediaProperties.mediaDirection});\n  }\n\n  /**\n   * Sets the quality level of all meeting media (incoming/outgoing)\n   * @param {String} level {LOW|MEDIUM|HIGH}\n   * @returns {Promise}\n   */\n  setMeetingQuality(level) {\n    LoggerProxy.logger.log(`Meeting:index#setMeetingQuality --> Setting quality to ${level}`);\n\n    if (!QUALITY_LEVELS[level]) {\n      const errorMessage = `Meeting:index#setMeetingQuality --> ${level} not defined`;\n\n      LoggerProxy.logger.error(errorMessage);\n\n      return Promise.reject(new Error(errorMessage));\n    }\n\n    const previousLevel = {\n      local: this.mediaProperties.localQualityLevel,\n      remote: this.mediaProperties.remoteQualityLevel\n    };\n\n    // If level is already the same, don't do anything\n    if (\n      level === this.mediaProperties.localQualityLevel &&\n      level === this.mediaProperties.remoteQualityLevel\n    ) {\n      LoggerProxy.logger.warn(`Meeting:index#setMeetingQuality --> Quality already set to ${level}`);\n\n      return Promise.resolve();\n    }\n\n    // Determine the direction of our current media\n    const {receiveAudio, receiveVideo, sendVideo} = this.mediaProperties.mediaDirection;\n\n    return (sendVideo ? this.setLocalVideoQuality(level) : Promise.resolve())\n      .then(() =>\n        ((receiveAudio || receiveVideo) ?\n          this.setRemoteQualityLevel(level) :\n          Promise.resolve()))\n      .catch((error) => {\n        // From troubleshooting it seems that the stream itself doesn't change the max-fs if the peer connection isn't stable\n        this.mediaProperties.setLocalQualityLevel(previousLevel.local);\n        this.mediaProperties.setRemoteQualityLevel(previousLevel.remote);\n\n        LoggerProxy.logger.error(`Meeting:index#setMeetingQuality --> ${error.message}`);\n\n        Metrics.sendOperationalMetric(\n          METRICS_OPERATIONAL_MEASURES.SET_MEETING_QUALITY_FAILURE,\n          {\n            correlation_id: this.correlationId,\n            locus_id: this.locusUrl.split('/').pop(),\n            reason: error.message,\n            stack: error.stack\n          },\n          {\n            type: error.name\n          }\n        );\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n  * @param {Object} options parameter\n  * @param {Boolean} options.sendAudio send audio from the display share\n  * @param {Boolean} options.sendShare send video from the display share\n  * @param {Object} options.sharePreferences\n  * @param {MediaTrackConstraints} options.sharePreferences.shareConstraints constraints to apply to video\n  *   @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints}\n  * @param {Boolean} options.sharePreferences.highFrameRate if shareConstraints isn't provided, set default values based off of this boolean\n  * @returns {Promise}\n  */\n  shareScreen(options = {}) {\n    LoggerProxy.logger.log('Meeting:index#shareScreen --> Getting local share');\n\n    const shareConstraints = {\n      sendShare: true,\n      sendAudio: false,\n      ...options\n    };\n\n    return Media.getDisplayMedia(shareConstraints, this.config)\n      .then((shareStream) => this.updateShare({\n        sendShare: true,\n        receiveShare: this.mediaProperties.mediaDirection.receiveShare,\n        stream: shareStream\n      }))\n      .catch((error) => {\n        // Whenever there is a failure when trying to access a user's display\n        // report it as an operational metric\n        // This gives visibility into common errors and can help\n        // with further troubleshooting\n\n        // This metrics will get erros for getDisplayMedia and share errors for now\n        // TODO: The getDisplayMedia errors need to be moved inside `media.getDisplayMedia`\n        const metricName = METRICS_OPERATIONAL_MEASURES.GET_DISPLAY_MEDIA_FAILURE;\n        const data = {\n          correlation_id: this.correlationId,\n          locus_id: this.locusUrl.split('/').pop(),\n          reason: error.message,\n          stack: error.stack\n        };\n        const metadata = {\n          type: error.name\n        };\n\n        Metrics.sendOperationalMetric(metricName, data, metadata);\n        throw new MediaError('Unable to retrieve display media stream', error);\n      });\n  }\n\n  /**\n   * Functionality for when a share is ended.\n   * @private\n   * @memberof Meeting\n   * @param {MediaStream} localShare\n   * @returns {undefined}\n   */\n  handleShareTrackEnded(localShare) {\n    if (this.wirelessShare) {\n      this.leave({reason: MEETING_REMOVED_REASON.USER_ENDED_SHARE_STREAMS});\n    }\n    else {\n      // Skip checking for a stable peerConnection\n      // to allow immediately stopping screenshare\n      this.stopShare({\n        skipSignalingCheck: true\n      })\n        .catch((error) => {\n          LoggerProxy.logger.log('Meeting:index#handleShareTrackEnded --> Error stopping share: ', error);\n        });\n    }\n\n    Trigger.trigger(\n      this,\n      {\n        file: 'meeting/index',\n        function: 'handleShareTrackEnded'\n      },\n      EVENT_TRIGGERS.MEETING_STOPPED_SHARING_LOCAL,\n      {\n        type: EVENT_TYPES.LOCAL_SHARE,\n        stream: localShare\n      }\n    );\n  }\n}\n"]}