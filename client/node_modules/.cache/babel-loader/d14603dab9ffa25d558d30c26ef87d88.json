{"ast":null,"code":"var _jsxFileName = \"/Users/ahmuruga/Desktop/deneps_web_app (Personal git)/client/src/routes/Login/Login.js\";\nimport React from 'react';\nimport InputField from '../../components/InputField';\nimport SubmitButton from '../../components/SubmitButton';\nimport UserStore from '../../stores/UserStore';\nimport logo from '../../cisco_logo_grey.png';\nimport './Login.css';\nimport { Dropdown } from 'reactjs-dropdown-component';\nimport { runInAction } from \"mobx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userEmail: '',\n      userCountry: '',\n      buttonDisabled: false,\n      loading: false\n    };\n    this.countries = [];\n  }\n\n  async componentDidMount() {\n    //Call method to polulate this.countries\n    this.countries.push({\n      label: 'New York',\n      value: \"newyork\"\n    });\n    this.countries.push({\n      label: 'India',\n      value: \"india\"\n    });\n    this.countries.push({\n      label: 'Singapore',\n      value: \"singapore\"\n    });\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    console.log(\"Im at reset Form\");\n    document.getElementById(\"alert-msg\").innerHTML = \"\";\n    document.getElementsByClassName(\"login-button\")[0].style.display = \"inline-block\";\n    document.getElementsByClassName(\"loader\")[0].style.display = \"none\";\n    this.setState({\n      userEmail: '',\n      userCountry: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.userEmail) {\n      document.getElementById(\"alert-msg\").style.color = \"red\";\n      document.getElementById(\"alert-msg\").innerHTML = \"Cisco Email & country is required!\";\n      return;\n    }\n\n    if (!this.state.userCountry) {\n      document.getElementById(\"alert-msg\").style.color = \"red\";\n      document.getElementById(\"alert-msg\").innerHTML = \"Cisco Email & country is required!\";\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    if (!checkEmailFormat(this.state.userEmail)) {\n      document.getElementById(\"alert-msg\").style.color = \"red\";\n      document.getElementById(\"alert-msg\").innerHTML = \"Enter a valid Cisco email\";\n      return;\n    } //Hide Submit button & display loading\n\n\n    document.getElementById(\"alert-msg\").style.color = \"black\";\n    document.getElementsByClassName(\"login-button\")[0].style.display = \"none\";\n    document.getElementsByClassName(\"loader\")[0].style.display = \"inline-block\";\n    document.getElementById(\"alert-msg\").innerHTML = \"Checking if user is Valid! \";\n\n    try {\n      let user = await fetch(\"/isValidUser\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: this.state.userEmail\n        })\n      });\n      let userResult = await user.json();\n\n      if (userResult && userResult.success === true) {\n        runInAction(() => {\n          UserStore.isValidUser = true;\n          UserStore.userEmail = userResult.useremail;\n          UserStore.firstName = userResult.firstname;\n          UserStore.lastName = userResult.lastname;\n        });\n      } else {\n        document.getElementById(\"alert-msg\").style.color = \"red\";\n        document.getElementById(\"alert-msg\").innerHTML = \"Not a valid Cisco user.Try again!\";\n        document.getElementsByClassName(\"login-button\")[0].style.display = \"inline-block\";\n        document.getElementsByClassName(\"loader\")[0].style.display = \"none\";\n        return;\n      } //Accept Login Card from Webex teams\n\n\n      document.getElementById(\"alert-msg\").style.color = \"black\";\n      document.getElementById(\"alert-msg\").innerHTML = \"Goto Webex Teams App & accept the Login\";\n      document.getElementsByClassName(\"login-button\")[0].style.display = \"none\";\n      document.getElementsByClassName(\"loader\")[0].style.display = \"none\";\n      let authRes = await fetch(\"/loginCardAuth\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: this.state.userEmail,\n          usercountry: this.state.userCountry\n        })\n      });\n      let dualAuth = await authRes.json();\n\n      if (dualAuth && dualAuth.success === false) {\n        throw new Error(\"User rejected login\");\n      }\n\n      console.log(\"Completed dual Auth\");\n      let res = await fetch(\"/login\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: this.state.userEmail,\n          usercountry: this.state.userCountry\n        })\n      });\n      let result = await res.json();\n      console.log(\"Completed login func\");\n\n      if (result && result.success === true) {\n        runInAction(() => {\n          UserStore.isLoggedIn = true;\n        });\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cisco-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            id: \"login-cisco-logo\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading-bold\",\n            children: \" Cisco \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: \"DENEPS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"alert-msg\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            class: \"input\",\n            type: \"text\",\n            placeholder: \"\",\n            value: this.state.userEmail ? this.state.userEmail : '',\n            onChange: val => this.setInputValue('userEmail', val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"highlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cisco Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          name: \"counties\",\n          title: this.state.userCountry ? this.state.userCountry : \"Select your country\",\n          searchable: [\"Search for country\", \"No matching country\"],\n          list: this.countries,\n          onChange: (item, name) => {\n            this.setInputValue('userCountry', item.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n          text: \"Next\",\n          className: \"login-button\",\n          disabled: this.state.button,\n          onClick: () => this.doLogin()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login; //Function to Check email fomrat has cisco.com\n\nfunction checkEmailFormat(inputEmail) {\n  var validator = require(\"email-validator\");\n\n  if (inputEmail && validator.validate(inputEmail)) {\n    var domain = inputEmail.split('@')[1];\n    if (domain === \"cisco.com\") return true;else return false;\n  } else return false;\n}\n/* export default function Login(props){\n    var userDetails = {};\n  \n    //props.onChange(result)\n    // Function to change properties of login box \n    function initiateLogin(){\n      document.getElementById(\"login-submit\").addEventListener(\"click\", function(event){\n        event.preventDefault()\n      });\n      var inputEmail= document.getElementById(\"email\").value;\n      console.log (inputEmail);\n      var x= checkEmailFormat(inputEmail);\n      if(x=== 0){\n        loginAPI(inputEmail)\n        .then(loginStatus =>{\n          if(loginStatus===true) {\n            document.getElementById(\"login-error\").innerHTML=\"\";\n            document.getElementById(\"webex-banner\").innerHTML=\"Accept the Login card by DENEPS Bot in Webex Teams!\";\n            document.getElementById(\"webex-banner\").style.color=\"green\";\n            pushWebexLoginCard(inputEmail)\n            .then(acceptCard=> {\n              if(acceptCard===true) {\n                props.onChange(userDetails)\n              }\n              else{\n                document.getElementById(\"webex-banner\").innerHTML=\"\";\n                document.getElementById(\"login-error\").innerHTML=\"Authentication rejected on Teams. Refresh page to Try again!\";\n                document.getElementById(\"login-error\").style.color=\"red\";\n                \n              }\n            });\n          }\n          else {\n            document.getElementById(\"login-error\").innerHTML=\"User e-mail not Found. Try again!\";\n            document.getElementById(\"login-error\").style.color=\"red\";\n          }\n        });\n\n      }else if (x===1){\n        document.getElementById(\"login-error\").innerHTML=\"Email format is invalid. Try again!\";\n        document.getElementById(\"login-error\").style.color=\"red\";\n      } else if (x===2){\n        document.getElementById(\"login-error\").innerHTML=\"Enter a cisco.com email. Try again!\";\n        document.getElementById(\"login-error\").style.color=\"red\";\n      }\n  \n    }\n    //Funtion to call express backend \n    async function loginAPI(email) {\n        var error= 0; \n        await fetch(\"/login/\"+email)\n        .then(checkStatus)\n        .then(res => res.json())\n        .then (result =>userDetails=result)\n        .catch(err => {error++; });\n\n        if (error>0) return false;\n        else return true;\n    }\n\n    async function pushWebexLoginCard(email) {\n      var error= 0; \n      await fetch(\"/login/\"+email, {method: 'POST'})\n      .then(checkStatus)\n      .then(res => res.json())\n      .catch(err => error++ );\n\n      if (error>0) return false;\n        else return true;\n\n    }\n\n    function checkStatus (res) {\n      if (res.status >= 200 && res.status < 300) {\n        return res\n      } else {\n        let err = new Error(res.statusText)\n        err.response = res\n        throw err\n      }\n    }\n  return(\n      <div className=\"login-page\"> \n      <div className=\"login-wrapper\">\n        <div className=\"cisco-logo\">\n          <img src={logo}  id= \"login-cisco-logo\" alt=\"logo\" />\n        </div>\n        <div className=\"login-heading\">\n          <div className=\"heading-bold\"> Cisco </div>\n          <div className=\"heading\">DENEPS</div>\n        </div>\n        <div id=\"login-error\">\n        </div>\n        <form action=\"#\">\n        <div id=\"webex-banner\">\n          <label>\n            <p id=\"tag\"> Cisco email</p>\n            <div className=\"input-field\">\n              <input id=\"email\" type=\"text\" />\n            </div>\n          </label>\n          <div id=\"login-error\">\n        </div>\n          <div className=\"button-field\">\n            <button  className= \"btn btn-primary\" onClick={initiateLogin} id= \"login-submit\" type=\"submit\">Submit</button>\n          </div>  \n          </div>\n        </form>\n        </div>\n      </div>\n  )\n}\n */","map":{"version":3,"sources":["/Users/ahmuruga/Desktop/deneps_web_app (Personal git)/client/src/routes/Login/Login.js"],"names":["React","InputField","SubmitButton","UserStore","logo","Dropdown","runInAction","Login","Component","constructor","props","state","userEmail","userCountry","buttonDisabled","loading","countries","componentDidMount","push","label","value","setInputValue","property","val","trim","setState","resetForm","console","log","document","getElementById","innerHTML","getElementsByClassName","style","display","doLogin","color","checkEmailFormat","user","fetch","method","headers","body","JSON","stringify","useremail","userResult","json","success","isValidUser","firstName","firstname","lastName","lastname","authRes","usercountry","dualAuth","Error","res","result","isLoggedIn","alert","msg","e","render","item","name","button","inputEmail","validator","require","validate","domain","split"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputField from '../../components/InputField';\nimport SubmitButton from '../../components/SubmitButton';\nimport UserStore from '../../stores/UserStore';\nimport logo from '../../cisco_logo_grey.png';\nimport './Login.css';\nimport { Dropdown } from 'reactjs-dropdown-component';\nimport { runInAction} from \"mobx\"\n\nclass Login extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      userEmail: '',\n      userCountry: '',\n      buttonDisabled: false,\n      loading:false\n      \n    }\n    this.countries=[];\n  }\n  \n  async componentDidMount(){\n    //Call method to polulate this.countries\n    this.countries.push({ \n      label: 'New York',\n      value:\"newyork\"\n  });\n  this.countries.push({\n    label: 'India',\n    value:\"india\"\n  });\n  this.countries.push({\n    label: 'Singapore',\n    value:\"singapore\"\n  });\n  }\n\n  setInputValue(property, val){\n    val=val.trim();\n    this.setState({\n      [property]:val\n    });\n  }\n\n  resetForm() {\n    console.log(\"Im at reset Form\");\n    document.getElementById(\"alert-msg\").innerHTML=\"\";\n    document.getElementsByClassName(\"login-button\")[0].style.display=\"inline-block\";\n    document.getElementsByClassName(\"loader\")[0].style.display=\"none\";\n    this.setState({\n      userEmail: '',\n      userCountry: '',\n      buttonDisabled: false\n    })\n\n  }\n\n  async doLogin(){\n    if (!this.state.userEmail){\n      document.getElementById(\"alert-msg\").style.color=\"red\";\n      document.getElementById(\"alert-msg\").innerHTML=\"Cisco Email & country is required!\";\n      return;\n    }\n    if(!this.state.userCountry){\n      document.getElementById(\"alert-msg\").style.color=\"red\";\n      document.getElementById(\"alert-msg\").innerHTML=\"Cisco Email & country is required!\";\n      return;\n    }\n    this.setState({\n      buttonDisabled: true\n    })\n    \n    if(!checkEmailFormat(this.state.userEmail))\n    {\n      document.getElementById(\"alert-msg\").style.color=\"red\";\n      document.getElementById(\"alert-msg\").innerHTML=\"Enter a valid Cisco email\";\n      return;\n    }\n    //Hide Submit button & display loading\n    document.getElementById(\"alert-msg\").style.color=\"black\";\n    document.getElementsByClassName(\"login-button\")[0].style.display=\"none\";\n    document.getElementsByClassName(\"loader\")[0].style.display=\"inline-block\";\n    document.getElementById(\"alert-msg\").innerHTML=\"Checking if user is Valid! \"\n    \n    try{\n      \n      let user = await fetch(\"/isValidUser\",{\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: this.state.userEmail,\n        })\n      });\n\n    \n      let userResult= await user.json();\n\n      if(userResult && userResult.success===true){\n        runInAction(() => {\n        UserStore.isValidUser=true;\n        UserStore.userEmail= userResult.useremail;\n        UserStore.firstName=userResult.firstname;\n        UserStore.lastName=userResult.lastname;\n        });\n      }\n      else {\n        document.getElementById(\"alert-msg\").style.color=\"red\";\n        document.getElementById(\"alert-msg\").innerHTML=\"Not a valid Cisco user.Try again!\";\n        document.getElementsByClassName(\"login-button\")[0].style.display=\"inline-block\";\n        document.getElementsByClassName(\"loader\")[0].style.display=\"none\";\n        return;\n      } \n      //Accept Login Card from Webex teams\n      document.getElementById(\"alert-msg\").style.color=\"black\";\n      document.getElementById(\"alert-msg\").innerHTML=\"Goto Webex Teams App & accept the Login\";\n      document.getElementsByClassName(\"login-button\")[0].style.display=\"none\";\n      document.getElementsByClassName(\"loader\")[0].style.display=\"none\"; \n       \n      let authRes = await fetch(\"/loginCardAuth\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: this.state.userEmail,\n          usercountry: this.state.userCountry\n        })\n      });\n      \n      let dualAuth = await authRes.json();\n\n      if(dualAuth && dualAuth.success===false){\n          throw new Error(\"User rejected login\");\n      }\n      console.log(\"Completed dual Auth\");\n\n      let res = await fetch(\"/login\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          useremail: this.state.userEmail,\n          usercountry: this.state.userCountry\n        })\n      });\n    \n      let result = await res.json();\n      console.log(\"Completed login func\");\n      if(result && result.success===true){\n        runInAction(() => {\n        UserStore.isLoggedIn= true;\n        });\n      }\n      else if (result && result.success===false){\n        this.resetForm();\n        alert(result.msg);\n      }\n\n    }catch(e){\n      console.log(e);\n      this.resetForm();\n    }\n\n  }\n\n  render(){\n    return(\n      <div className=\"login-page\"> \n       <div className=\"login-wrapper\">\n        <div className=\"cisco-logo\">\n          <img src={logo}  id= \"login-cisco-logo\" alt=\"logo\" />\n        </div>\n        <div className=\"login-heading\">\n          <div className=\"heading-bold\"> Cisco </div>\n          <div className=\"heading\">DENEPS</div>\n        </div>\n        <div id=\"alert-msg\">\n        &nbsp;\n        </div>\n        <div class=\"input-group\">\n        <InputField\n              class=\"input\"\n              type =\"text\"\n              placeholder=\"\"\n              value= {this.state.userEmail? this.state.userEmail: ''}\n              onChange={(val)=>this.setInputValue('userEmail',val)}\n            />\n        <span class=\"highlight\"></span>\n        <span class=\"bar\"></span>\n        <label>Cisco Email</label>\n      </div>\n\n        <Dropdown\n          name=\"counties\"\n          title={this.state.userCountry?this.state.userCountry: \"Select your country\"}\n          searchable={[\"Search for country\", \"No matching country\"]}\n          list={this.countries}\n          onChange={(item,name)=> {this.setInputValue('userCountry',item.value)}}\n        />\n        <div class=\"loader\"></div>\n\n        <SubmitButton\n          text= \"Next\"\n          className=\"login-button\"\n          disabled= {this.state.button}\n          onClick= {()=>this.doLogin()}\n        />\n      </div>\n      </div>\n    );\n  }\n}\nexport default Login;\n\n\n//Function to Check email fomrat has cisco.com\n   function checkEmailFormat(inputEmail){\n    var validator = require(\"email-validator\");\n    if (inputEmail && validator.validate(inputEmail) ){\n      var domain= inputEmail.split('@')[1];\n      if(domain===\"cisco.com\") return true;\n      else return false;\n    }\n    else return false;\n  }\n\n\n/* export default function Login(props){\n    var userDetails = {};\n  \n    //props.onChange(result)\n    // Function to change properties of login box \n    function initiateLogin(){\n      document.getElementById(\"login-submit\").addEventListener(\"click\", function(event){\n        event.preventDefault()\n      });\n      var inputEmail= document.getElementById(\"email\").value;\n      console.log (inputEmail);\n      var x= checkEmailFormat(inputEmail);\n      if(x=== 0){\n        loginAPI(inputEmail)\n        .then(loginStatus =>{\n          if(loginStatus===true) {\n            document.getElementById(\"login-error\").innerHTML=\"\";\n            document.getElementById(\"webex-banner\").innerHTML=\"Accept the Login card by DENEPS Bot in Webex Teams!\";\n            document.getElementById(\"webex-banner\").style.color=\"green\";\n            pushWebexLoginCard(inputEmail)\n            .then(acceptCard=> {\n              if(acceptCard===true) {\n                props.onChange(userDetails)\n              }\n              else{\n                document.getElementById(\"webex-banner\").innerHTML=\"\";\n                document.getElementById(\"login-error\").innerHTML=\"Authentication rejected on Teams. Refresh page to Try again!\";\n                document.getElementById(\"login-error\").style.color=\"red\";\n                \n              }\n            });\n          }\n          else {\n            document.getElementById(\"login-error\").innerHTML=\"User e-mail not Found. Try again!\";\n            document.getElementById(\"login-error\").style.color=\"red\";\n          }\n        });\n\n      }else if (x===1){\n        document.getElementById(\"login-error\").innerHTML=\"Email format is invalid. Try again!\";\n        document.getElementById(\"login-error\").style.color=\"red\";\n      } else if (x===2){\n        document.getElementById(\"login-error\").innerHTML=\"Enter a cisco.com email. Try again!\";\n        document.getElementById(\"login-error\").style.color=\"red\";\n      }\n  \n    }\n    //Funtion to call express backend \n    async function loginAPI(email) {\n        var error= 0; \n        await fetch(\"/login/\"+email)\n        .then(checkStatus)\n        .then(res => res.json())\n        .then (result =>userDetails=result)\n        .catch(err => {error++; });\n\n        if (error>0) return false;\n        else return true;\n    }\n\n    async function pushWebexLoginCard(email) {\n      var error= 0; \n      await fetch(\"/login/\"+email, {method: 'POST'})\n      .then(checkStatus)\n      .then(res => res.json())\n      .catch(err => error++ );\n\n      if (error>0) return false;\n        else return true;\n\n    }\n\n    function checkStatus (res) {\n      if (res.status >= 200 && res.status < 300) {\n        return res\n      } else {\n        let err = new Error(res.statusText)\n        err.response = res\n        throw err\n      }\n    }\n  return(\n      <div className=\"login-page\"> \n      <div className=\"login-wrapper\">\n        <div className=\"cisco-logo\">\n          <img src={logo}  id= \"login-cisco-logo\" alt=\"logo\" />\n        </div>\n        <div className=\"login-heading\">\n          <div className=\"heading-bold\"> Cisco </div>\n          <div className=\"heading\">DENEPS</div>\n        </div>\n        <div id=\"login-error\">\n        </div>\n        <form action=\"#\">\n        <div id=\"webex-banner\">\n          <label>\n            <p id=\"tag\"> Cisco email</p>\n            <div className=\"input-field\">\n              <input id=\"email\" type=\"text\" />\n            </div>\n          </label>\n          <div id=\"login-error\">\n        </div>\n          <div className=\"button-field\">\n            <button  className= \"btn btn-primary\" onClick={initiateLogin} id= \"login-submit\" type=\"submit\">Submit</button>\n          </div>  \n          </div>\n        </form>\n        </div>\n      </div>\n  )\n}\n */\n"]},"metadata":{},"sourceType":"module"}